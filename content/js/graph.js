/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 30.0, "minX": 0.0, "maxY": 57633.0, "series": [{"data": [[0.0, 30.0], [0.1, 30.0], [0.2, 30.0], [0.3, 30.0], [0.4, 30.0], [0.5, 30.0], [0.6, 30.0], [0.7, 30.0], [0.8, 30.0], [0.9, 30.0], [1.0, 30.0], [1.1, 30.0], [1.2, 30.0], [1.3, 31.0], [1.4, 31.0], [1.5, 31.0], [1.6, 31.0], [1.7, 31.0], [1.8, 31.0], [1.9, 31.0], [2.0, 31.0], [2.1, 31.0], [2.2, 31.0], [2.3, 31.0], [2.4, 31.0], [2.5, 38.0], [2.6, 38.0], [2.7, 38.0], [2.8, 38.0], [2.9, 38.0], [3.0, 38.0], [3.1, 38.0], [3.2, 38.0], [3.3, 38.0], [3.4, 38.0], [3.5, 38.0], [3.6, 38.0], [3.7, 38.0], [3.8, 40.0], [3.9, 40.0], [4.0, 40.0], [4.1, 40.0], [4.2, 40.0], [4.3, 40.0], [4.4, 40.0], [4.5, 40.0], [4.6, 40.0], [4.7, 40.0], [4.8, 40.0], [4.9, 40.0], [5.0, 45.0], [5.1, 45.0], [5.2, 45.0], [5.3, 45.0], [5.4, 45.0], [5.5, 45.0], [5.6, 45.0], [5.7, 45.0], [5.8, 45.0], [5.9, 45.0], [6.0, 45.0], [6.1, 45.0], [6.2, 45.0], [6.3, 46.0], [6.4, 46.0], [6.5, 46.0], [6.6, 46.0], [6.7, 46.0], [6.8, 46.0], [6.9, 46.0], [7.0, 46.0], [7.1, 46.0], [7.2, 46.0], [7.3, 46.0], [7.4, 46.0], [7.5, 48.0], [7.6, 48.0], [7.7, 48.0], [7.8, 48.0], [7.9, 48.0], [8.0, 48.0], [8.1, 48.0], [8.2, 48.0], [8.3, 48.0], [8.4, 48.0], [8.5, 48.0], [8.6, 48.0], [8.7, 48.0], [8.8, 49.0], [8.9, 49.0], [9.0, 49.0], [9.1, 49.0], [9.2, 49.0], [9.3, 49.0], [9.4, 49.0], [9.5, 49.0], [9.6, 49.0], [9.7, 49.0], [9.8, 49.0], [9.9, 49.0], [10.0, 51.0], [10.1, 51.0], [10.2, 51.0], [10.3, 51.0], [10.4, 51.0], [10.5, 51.0], [10.6, 51.0], [10.7, 51.0], [10.8, 51.0], [10.9, 51.0], [11.0, 51.0], [11.1, 51.0], [11.2, 51.0], [11.3, 51.0], [11.4, 51.0], [11.5, 51.0], [11.6, 51.0], [11.7, 51.0], [11.8, 51.0], [11.9, 51.0], [12.0, 51.0], [12.1, 51.0], [12.2, 51.0], [12.3, 51.0], [12.4, 51.0], [12.5, 52.0], [12.6, 52.0], [12.7, 52.0], [12.8, 52.0], [12.9, 52.0], [13.0, 52.0], [13.1, 52.0], [13.2, 52.0], [13.3, 52.0], [13.4, 52.0], [13.5, 52.0], [13.6, 52.0], [13.7, 52.0], [13.8, 55.0], [13.9, 55.0], [14.0, 55.0], [14.1, 55.0], [14.2, 55.0], [14.3, 55.0], [14.4, 55.0], [14.5, 55.0], [14.6, 55.0], [14.7, 55.0], [14.8, 55.0], [14.9, 55.0], [15.0, 56.0], [15.1, 56.0], [15.2, 56.0], [15.3, 56.0], [15.4, 56.0], [15.5, 56.0], [15.6, 56.0], [15.7, 56.0], [15.8, 56.0], [15.9, 56.0], [16.0, 56.0], [16.1, 56.0], [16.2, 56.0], [16.3, 57.0], [16.4, 57.0], [16.5, 57.0], [16.6, 57.0], [16.7, 57.0], [16.8, 57.0], [16.9, 57.0], [17.0, 57.0], [17.1, 57.0], [17.2, 57.0], [17.3, 57.0], [17.4, 57.0], [17.5, 59.0], [17.6, 59.0], [17.7, 59.0], [17.8, 59.0], [17.9, 59.0], [18.0, 59.0], [18.1, 59.0], [18.2, 59.0], [18.3, 59.0], [18.4, 59.0], [18.5, 59.0], [18.6, 59.0], [18.7, 59.0], [18.8, 61.0], [18.9, 61.0], [19.0, 61.0], [19.1, 61.0], [19.2, 61.0], [19.3, 61.0], [19.4, 61.0], [19.5, 61.0], [19.6, 61.0], [19.7, 61.0], [19.8, 61.0], [19.9, 61.0], [20.0, 62.0], [20.1, 62.0], [20.2, 62.0], [20.3, 62.0], [20.4, 62.0], [20.5, 62.0], [20.6, 62.0], [20.7, 62.0], [20.8, 62.0], [20.9, 62.0], [21.0, 62.0], [21.1, 62.0], [21.2, 62.0], [21.3, 63.0], [21.4, 63.0], [21.5, 63.0], [21.6, 63.0], [21.7, 63.0], [21.8, 63.0], [21.9, 63.0], [22.0, 63.0], [22.1, 63.0], [22.2, 63.0], [22.3, 63.0], [22.4, 63.0], [22.5, 64.0], [22.6, 64.0], [22.7, 64.0], [22.8, 64.0], [22.9, 64.0], [23.0, 64.0], [23.1, 64.0], [23.2, 64.0], [23.3, 64.0], [23.4, 64.0], [23.5, 64.0], [23.6, 64.0], [23.7, 64.0], [23.8, 64.0], [23.9, 64.0], [24.0, 64.0], [24.1, 64.0], [24.2, 64.0], [24.3, 64.0], [24.4, 64.0], [24.5, 64.0], [24.6, 64.0], [24.7, 64.0], [24.8, 64.0], [24.9, 64.0], [25.0, 67.0], [25.1, 67.0], [25.2, 67.0], [25.3, 67.0], [25.4, 67.0], [25.5, 67.0], [25.6, 67.0], [25.7, 67.0], [25.8, 67.0], [25.9, 67.0], [26.0, 67.0], [26.1, 67.0], [26.2, 67.0], [26.3, 67.0], [26.4, 67.0], [26.5, 67.0], [26.6, 67.0], [26.7, 67.0], [26.8, 67.0], [26.9, 67.0], [27.0, 67.0], [27.1, 67.0], [27.2, 67.0], [27.3, 67.0], [27.4, 67.0], [27.5, 68.0], [27.6, 68.0], [27.7, 68.0], [27.8, 68.0], [27.9, 68.0], [28.0, 68.0], [28.1, 68.0], [28.2, 68.0], [28.3, 68.0], [28.4, 68.0], [28.5, 68.0], [28.6, 68.0], [28.7, 68.0], [28.8, 68.0], [28.9, 68.0], [29.0, 68.0], [29.1, 68.0], [29.2, 68.0], [29.3, 68.0], [29.4, 68.0], [29.5, 68.0], [29.6, 68.0], [29.7, 68.0], [29.8, 68.0], [29.9, 68.0], [30.0, 70.0], [30.1, 70.0], [30.2, 70.0], [30.3, 70.0], [30.4, 70.0], [30.5, 70.0], [30.6, 70.0], [30.7, 70.0], [30.8, 70.0], [30.9, 70.0], [31.0, 70.0], [31.1, 70.0], [31.2, 70.0], [31.3, 72.0], [31.4, 72.0], [31.5, 72.0], [31.6, 72.0], [31.7, 72.0], [31.8, 72.0], [31.9, 72.0], [32.0, 72.0], [32.1, 72.0], [32.2, 72.0], [32.3, 72.0], [32.4, 72.0], [32.5, 72.0], [32.6, 72.0], [32.7, 72.0], [32.8, 72.0], [32.9, 72.0], [33.0, 72.0], [33.1, 72.0], [33.2, 72.0], [33.3, 72.0], [33.4, 72.0], [33.5, 72.0], [33.6, 72.0], [33.7, 72.0], [33.8, 73.0], [33.9, 73.0], [34.0, 73.0], [34.1, 73.0], [34.2, 73.0], [34.3, 73.0], [34.4, 73.0], [34.5, 73.0], [34.6, 73.0], [34.7, 73.0], [34.8, 73.0], [34.9, 73.0], [35.0, 74.0], [35.1, 74.0], [35.2, 74.0], [35.3, 74.0], [35.4, 74.0], [35.5, 74.0], [35.6, 74.0], [35.7, 74.0], [35.8, 74.0], [35.9, 74.0], [36.0, 74.0], [36.1, 74.0], [36.2, 74.0], [36.3, 75.0], [36.4, 75.0], [36.5, 75.0], [36.6, 75.0], [36.7, 75.0], [36.8, 75.0], [36.9, 75.0], [37.0, 75.0], [37.1, 75.0], [37.2, 75.0], [37.3, 75.0], [37.4, 75.0], [37.5, 79.0], [37.6, 79.0], [37.7, 79.0], [37.8, 79.0], [37.9, 79.0], [38.0, 79.0], [38.1, 79.0], [38.2, 79.0], [38.3, 79.0], [38.4, 79.0], [38.5, 79.0], [38.6, 79.0], [38.7, 79.0], [38.8, 83.0], [38.9, 83.0], [39.0, 83.0], [39.1, 83.0], [39.2, 83.0], [39.3, 83.0], [39.4, 83.0], [39.5, 83.0], [39.6, 83.0], [39.7, 83.0], [39.8, 83.0], [39.9, 83.0], [40.0, 83.0], [40.1, 83.0], [40.2, 83.0], [40.3, 83.0], [40.4, 83.0], [40.5, 83.0], [40.6, 83.0], [40.7, 83.0], [40.8, 83.0], [40.9, 83.0], [41.0, 83.0], [41.1, 83.0], [41.2, 83.0], [41.3, 85.0], [41.4, 85.0], [41.5, 85.0], [41.6, 85.0], [41.7, 85.0], [41.8, 85.0], [41.9, 85.0], [42.0, 85.0], [42.1, 85.0], [42.2, 85.0], [42.3, 85.0], [42.4, 85.0], [42.5, 86.0], [42.6, 86.0], [42.7, 86.0], [42.8, 86.0], [42.9, 86.0], [43.0, 86.0], [43.1, 86.0], [43.2, 86.0], [43.3, 86.0], [43.4, 86.0], [43.5, 86.0], [43.6, 86.0], [43.7, 86.0], [43.8, 87.0], [43.9, 87.0], [44.0, 87.0], [44.1, 87.0], [44.2, 87.0], [44.3, 87.0], [44.4, 87.0], [44.5, 87.0], [44.6, 87.0], [44.7, 87.0], [44.8, 87.0], [44.9, 87.0], [45.0, 89.0], [45.1, 89.0], [45.2, 89.0], [45.3, 89.0], [45.4, 89.0], [45.5, 89.0], [45.6, 89.0], [45.7, 89.0], [45.8, 89.0], [45.9, 89.0], [46.0, 89.0], [46.1, 89.0], [46.2, 89.0], [46.3, 95.0], [46.4, 95.0], [46.5, 95.0], [46.6, 95.0], [46.7, 95.0], [46.8, 95.0], [46.9, 95.0], [47.0, 95.0], [47.1, 95.0], [47.2, 95.0], [47.3, 95.0], [47.4, 95.0], [47.5, 97.0], [47.6, 97.0], [47.7, 97.0], [47.8, 97.0], [47.9, 97.0], [48.0, 97.0], [48.1, 97.0], [48.2, 97.0], [48.3, 97.0], [48.4, 97.0], [48.5, 97.0], [48.6, 97.0], [48.7, 97.0], [48.8, 98.0], [48.9, 98.0], [49.0, 98.0], [49.1, 98.0], [49.2, 98.0], [49.3, 98.0], [49.4, 98.0], [49.5, 98.0], [49.6, 98.0], [49.7, 98.0], [49.8, 98.0], [49.9, 98.0], [50.0, 101.0], [50.1, 101.0], [50.2, 101.0], [50.3, 101.0], [50.4, 101.0], [50.5, 101.0], [50.6, 101.0], [50.7, 101.0], [50.8, 101.0], [50.9, 101.0], [51.0, 101.0], [51.1, 101.0], [51.2, 101.0], [51.3, 101.0], [51.4, 101.0], [51.5, 101.0], [51.6, 101.0], [51.7, 101.0], [51.8, 101.0], [51.9, 101.0], [52.0, 101.0], [52.1, 101.0], [52.2, 101.0], [52.3, 101.0], [52.4, 101.0], [52.5, 103.0], [52.6, 103.0], [52.7, 103.0], [52.8, 103.0], [52.9, 103.0], [53.0, 103.0], [53.1, 103.0], [53.2, 103.0], [53.3, 103.0], [53.4, 103.0], [53.5, 103.0], [53.6, 103.0], [53.7, 103.0], [53.8, 117.0], [53.9, 117.0], [54.0, 117.0], [54.1, 117.0], [54.2, 117.0], [54.3, 117.0], [54.4, 117.0], [54.5, 117.0], [54.6, 117.0], [54.7, 117.0], [54.8, 117.0], [54.9, 117.0], [55.0, 118.0], [55.1, 118.0], [55.2, 118.0], [55.3, 118.0], [55.4, 118.0], [55.5, 118.0], [55.6, 118.0], [55.7, 118.0], [55.8, 118.0], [55.9, 118.0], [56.0, 118.0], [56.1, 118.0], [56.2, 118.0], [56.3, 130.0], [56.4, 130.0], [56.5, 130.0], [56.6, 130.0], [56.7, 130.0], [56.8, 130.0], [56.9, 130.0], [57.0, 130.0], [57.1, 130.0], [57.2, 130.0], [57.3, 130.0], [57.4, 130.0], [57.5, 135.0], [57.6, 135.0], [57.7, 135.0], [57.8, 135.0], [57.9, 135.0], [58.0, 135.0], [58.1, 135.0], [58.2, 135.0], [58.3, 135.0], [58.4, 135.0], [58.5, 135.0], [58.6, 135.0], [58.7, 135.0], [58.8, 163.0], [58.9, 163.0], [59.0, 163.0], [59.1, 163.0], [59.2, 163.0], [59.3, 163.0], [59.4, 163.0], [59.5, 163.0], [59.6, 163.0], [59.7, 163.0], [59.8, 163.0], [59.9, 163.0], [60.0, 176.0], [60.1, 176.0], [60.2, 176.0], [60.3, 176.0], [60.4, 176.0], [60.5, 176.0], [60.6, 176.0], [60.7, 176.0], [60.8, 176.0], [60.9, 176.0], [61.0, 176.0], [61.1, 176.0], [61.2, 176.0], [61.3, 184.0], [61.4, 184.0], [61.5, 184.0], [61.6, 184.0], [61.7, 184.0], [61.8, 184.0], [61.9, 184.0], [62.0, 184.0], [62.1, 184.0], [62.2, 184.0], [62.3, 184.0], [62.4, 184.0], [62.5, 195.0], [62.6, 195.0], [62.7, 195.0], [62.8, 195.0], [62.9, 195.0], [63.0, 195.0], [63.1, 195.0], [63.2, 195.0], [63.3, 195.0], [63.4, 195.0], [63.5, 195.0], [63.6, 195.0], [63.7, 195.0], [63.8, 197.0], [63.9, 197.0], [64.0, 197.0], [64.1, 197.0], [64.2, 197.0], [64.3, 197.0], [64.4, 197.0], [64.5, 197.0], [64.6, 197.0], [64.7, 197.0], [64.8, 197.0], [64.9, 197.0], [65.0, 203.0], [65.1, 203.0], [65.2, 203.0], [65.3, 203.0], [65.4, 203.0], [65.5, 203.0], [65.6, 203.0], [65.7, 203.0], [65.8, 203.0], [65.9, 203.0], [66.0, 203.0], [66.1, 203.0], [66.2, 203.0], [66.3, 231.0], [66.4, 231.0], [66.5, 231.0], [66.6, 231.0], [66.7, 231.0], [66.8, 231.0], [66.9, 231.0], [67.0, 231.0], [67.1, 231.0], [67.2, 231.0], [67.3, 231.0], [67.4, 231.0], [67.5, 236.0], [67.6, 236.0], [67.7, 236.0], [67.8, 236.0], [67.9, 236.0], [68.0, 236.0], [68.1, 236.0], [68.2, 236.0], [68.3, 236.0], [68.4, 236.0], [68.5, 236.0], [68.6, 236.0], [68.7, 236.0], [68.8, 243.0], [68.9, 243.0], [69.0, 243.0], [69.1, 243.0], [69.2, 243.0], [69.3, 243.0], [69.4, 243.0], [69.5, 243.0], [69.6, 243.0], [69.7, 243.0], [69.8, 243.0], [69.9, 243.0], [70.0, 298.0], [70.1, 298.0], [70.2, 298.0], [70.3, 298.0], [70.4, 298.0], [70.5, 298.0], [70.6, 298.0], [70.7, 298.0], [70.8, 298.0], [70.9, 298.0], [71.0, 298.0], [71.1, 298.0], [71.2, 298.0], [71.3, 303.0], [71.4, 303.0], [71.5, 303.0], [71.6, 303.0], [71.7, 303.0], [71.8, 303.0], [71.9, 303.0], [72.0, 303.0], [72.1, 303.0], [72.2, 303.0], [72.3, 303.0], [72.4, 303.0], [72.5, 335.0], [72.6, 335.0], [72.7, 335.0], [72.8, 335.0], [72.9, 335.0], [73.0, 335.0], [73.1, 335.0], [73.2, 335.0], [73.3, 335.0], [73.4, 335.0], [73.5, 335.0], [73.6, 335.0], [73.7, 335.0], [73.8, 345.0], [73.9, 345.0], [74.0, 345.0], [74.1, 345.0], [74.2, 345.0], [74.3, 345.0], [74.4, 345.0], [74.5, 345.0], [74.6, 345.0], [74.7, 345.0], [74.8, 345.0], [74.9, 345.0], [75.0, 351.0], [75.1, 351.0], [75.2, 351.0], [75.3, 351.0], [75.4, 351.0], [75.5, 351.0], [75.6, 351.0], [75.7, 351.0], [75.8, 351.0], [75.9, 351.0], [76.0, 351.0], [76.1, 351.0], [76.2, 351.0], [76.3, 356.0], [76.4, 356.0], [76.5, 356.0], [76.6, 356.0], [76.7, 356.0], [76.8, 356.0], [76.9, 356.0], [77.0, 356.0], [77.1, 356.0], [77.2, 356.0], [77.3, 356.0], [77.4, 356.0], [77.5, 357.0], [77.6, 357.0], [77.7, 357.0], [77.8, 357.0], [77.9, 357.0], [78.0, 357.0], [78.1, 357.0], [78.2, 357.0], [78.3, 357.0], [78.4, 357.0], [78.5, 357.0], [78.6, 357.0], [78.7, 357.0], [78.8, 369.0], [78.9, 369.0], [79.0, 369.0], [79.1, 369.0], [79.2, 369.0], [79.3, 369.0], [79.4, 369.0], [79.5, 369.0], [79.6, 369.0], [79.7, 369.0], [79.8, 369.0], [79.9, 369.0], [80.0, 375.0], [80.1, 375.0], [80.2, 375.0], [80.3, 375.0], [80.4, 375.0], [80.5, 375.0], [80.6, 375.0], [80.7, 375.0], [80.8, 375.0], [80.9, 375.0], [81.0, 375.0], [81.1, 375.0], [81.2, 375.0], [81.3, 389.0], [81.4, 389.0], [81.5, 389.0], [81.6, 389.0], [81.7, 389.0], [81.8, 389.0], [81.9, 389.0], [82.0, 389.0], [82.1, 389.0], [82.2, 389.0], [82.3, 389.0], [82.4, 389.0], [82.5, 407.0], [82.6, 407.0], [82.7, 407.0], [82.8, 407.0], [82.9, 407.0], [83.0, 407.0], [83.1, 407.0], [83.2, 407.0], [83.3, 407.0], [83.4, 407.0], [83.5, 407.0], [83.6, 407.0], [83.7, 407.0], [83.8, 420.0], [83.9, 420.0], [84.0, 420.0], [84.1, 420.0], [84.2, 420.0], [84.3, 420.0], [84.4, 420.0], [84.5, 420.0], [84.6, 420.0], [84.7, 420.0], [84.8, 420.0], [84.9, 420.0], [85.0, 422.0], [85.1, 422.0], [85.2, 422.0], [85.3, 422.0], [85.4, 422.0], [85.5, 422.0], [85.6, 422.0], [85.7, 422.0], [85.8, 422.0], [85.9, 422.0], [86.0, 422.0], [86.1, 422.0], [86.2, 422.0], [86.3, 452.0], [86.4, 452.0], [86.5, 452.0], [86.6, 452.0], [86.7, 452.0], [86.8, 452.0], [86.9, 452.0], [87.0, 452.0], [87.1, 452.0], [87.2, 452.0], [87.3, 452.0], [87.4, 452.0], [87.5, 461.0], [87.6, 461.0], [87.7, 461.0], [87.8, 461.0], [87.9, 461.0], [88.0, 461.0], [88.1, 461.0], [88.2, 461.0], [88.3, 461.0], [88.4, 461.0], [88.5, 461.0], [88.6, 461.0], [88.7, 461.0], [88.8, 479.0], [88.9, 479.0], [89.0, 479.0], [89.1, 479.0], [89.2, 479.0], [89.3, 479.0], [89.4, 479.0], [89.5, 479.0], [89.6, 479.0], [89.7, 479.0], [89.8, 479.0], [89.9, 479.0], [90.0, 523.0], [90.1, 523.0], [90.2, 523.0], [90.3, 523.0], [90.4, 523.0], [90.5, 523.0], [90.6, 523.0], [90.7, 523.0], [90.8, 523.0], [90.9, 523.0], [91.0, 523.0], [91.1, 523.0], [91.2, 523.0], [91.3, 525.0], [91.4, 525.0], [91.5, 525.0], [91.6, 525.0], [91.7, 525.0], [91.8, 525.0], [91.9, 525.0], [92.0, 525.0], [92.1, 525.0], [92.2, 525.0], [92.3, 525.0], [92.4, 525.0], [92.5, 559.0], [92.6, 559.0], [92.7, 559.0], [92.8, 559.0], [92.9, 559.0], [93.0, 559.0], [93.1, 559.0], [93.2, 559.0], [93.3, 559.0], [93.4, 559.0], [93.5, 559.0], [93.6, 559.0], [93.7, 559.0], [93.8, 584.0], [93.9, 584.0], [94.0, 584.0], [94.1, 584.0], [94.2, 584.0], [94.3, 584.0], [94.4, 584.0], [94.5, 584.0], [94.6, 584.0], [94.7, 584.0], [94.8, 584.0], [94.9, 584.0], [95.0, 587.0], [95.1, 587.0], [95.2, 587.0], [95.3, 587.0], [95.4, 587.0], [95.5, 587.0], [95.6, 587.0], [95.7, 587.0], [95.8, 587.0], [95.9, 587.0], [96.0, 587.0], [96.1, 587.0], [96.2, 587.0], [96.3, 594.0], [96.4, 594.0], [96.5, 594.0], [96.6, 594.0], [96.7, 594.0], [96.8, 594.0], [96.9, 594.0], [97.0, 594.0], [97.1, 594.0], [97.2, 594.0], [97.3, 594.0], [97.4, 594.0], [97.5, 609.0], [97.6, 609.0], [97.7, 609.0], [97.8, 609.0], [97.9, 609.0], [98.0, 609.0], [98.1, 609.0], [98.2, 609.0], [98.3, 609.0], [98.4, 609.0], [98.5, 609.0], [98.6, 609.0], [98.7, 609.0], [98.8, 1074.0], [98.9, 1074.0], [99.0, 1074.0], [99.1, 1074.0], [99.2, 1074.0], [99.3, 1074.0], [99.4, 1074.0], [99.5, 1074.0], [99.6, 1074.0], [99.7, 1074.0], [99.8, 1074.0], [99.9, 1074.0]], "isOverall": false, "label": "Token-0", "isController": false}, {"data": [[0.0, 224.0], [0.1, 224.0], [0.2, 224.0], [0.3, 224.0], [0.4, 224.0], [0.5, 224.0], [0.6, 224.0], [0.7, 224.0], [0.8, 224.0], [0.9, 224.0], [1.0, 224.0], [1.1, 224.0], [1.2, 224.0], [1.3, 246.0], [1.4, 246.0], [1.5, 246.0], [1.6, 246.0], [1.7, 246.0], [1.8, 246.0], [1.9, 246.0], [2.0, 246.0], [2.1, 246.0], [2.2, 246.0], [2.3, 246.0], [2.4, 246.0], [2.5, 247.0], [2.6, 247.0], [2.7, 247.0], [2.8, 247.0], [2.9, 247.0], [3.0, 247.0], [3.1, 247.0], [3.2, 247.0], [3.3, 247.0], [3.4, 247.0], [3.5, 247.0], [3.6, 247.0], [3.7, 247.0], [3.8, 260.0], [3.9, 260.0], [4.0, 260.0], [4.1, 260.0], [4.2, 260.0], [4.3, 260.0], [4.4, 260.0], [4.5, 260.0], [4.6, 260.0], [4.7, 260.0], [4.8, 260.0], [4.9, 260.0], [5.0, 264.0], [5.1, 264.0], [5.2, 264.0], [5.3, 264.0], [5.4, 264.0], [5.5, 264.0], [5.6, 264.0], [5.7, 264.0], [5.8, 264.0], [5.9, 264.0], [6.0, 264.0], [6.1, 264.0], [6.2, 264.0], [6.3, 265.0], [6.4, 265.0], [6.5, 265.0], [6.6, 265.0], [6.7, 265.0], [6.8, 265.0], [6.9, 265.0], [7.0, 265.0], [7.1, 265.0], [7.2, 265.0], [7.3, 265.0], [7.4, 265.0], [7.5, 275.0], [7.6, 275.0], [7.7, 275.0], [7.8, 275.0], [7.9, 275.0], [8.0, 275.0], [8.1, 275.0], [8.2, 275.0], [8.3, 275.0], [8.4, 275.0], [8.5, 275.0], [8.6, 275.0], [8.7, 275.0], [8.8, 276.0], [8.9, 276.0], [9.0, 276.0], [9.1, 276.0], [9.2, 276.0], [9.3, 276.0], [9.4, 276.0], [9.5, 276.0], [9.6, 276.0], [9.7, 276.0], [9.8, 276.0], [9.9, 276.0], [10.0, 280.0], [10.1, 280.0], [10.2, 280.0], [10.3, 280.0], [10.4, 280.0], [10.5, 280.0], [10.6, 280.0], [10.7, 280.0], [10.8, 280.0], [10.9, 280.0], [11.0, 280.0], [11.1, 280.0], [11.2, 280.0], [11.3, 285.0], [11.4, 285.0], [11.5, 285.0], [11.6, 285.0], [11.7, 285.0], [11.8, 285.0], [11.9, 285.0], [12.0, 285.0], [12.1, 285.0], [12.2, 285.0], [12.3, 285.0], [12.4, 285.0], [12.5, 293.0], [12.6, 293.0], [12.7, 293.0], [12.8, 293.0], [12.9, 293.0], [13.0, 293.0], [13.1, 293.0], [13.2, 293.0], [13.3, 293.0], [13.4, 293.0], [13.5, 293.0], [13.6, 293.0], [13.7, 293.0], [13.8, 294.0], [13.9, 294.0], [14.0, 294.0], [14.1, 294.0], [14.2, 294.0], [14.3, 294.0], [14.4, 294.0], [14.5, 294.0], [14.6, 294.0], [14.7, 294.0], [14.8, 294.0], [14.9, 294.0], [15.0, 299.0], [15.1, 299.0], [15.2, 299.0], [15.3, 299.0], [15.4, 299.0], [15.5, 299.0], [15.6, 299.0], [15.7, 299.0], [15.8, 299.0], [15.9, 299.0], [16.0, 299.0], [16.1, 299.0], [16.2, 299.0], [16.3, 302.0], [16.4, 302.0], [16.5, 302.0], [16.6, 302.0], [16.7, 302.0], [16.8, 302.0], [16.9, 302.0], [17.0, 302.0], [17.1, 302.0], [17.2, 302.0], [17.3, 302.0], [17.4, 302.0], [17.5, 323.0], [17.6, 323.0], [17.7, 323.0], [17.8, 323.0], [17.9, 323.0], [18.0, 323.0], [18.1, 323.0], [18.2, 323.0], [18.3, 323.0], [18.4, 323.0], [18.5, 323.0], [18.6, 323.0], [18.7, 323.0], [18.8, 335.0], [18.9, 335.0], [19.0, 335.0], [19.1, 335.0], [19.2, 335.0], [19.3, 335.0], [19.4, 335.0], [19.5, 335.0], [19.6, 335.0], [19.7, 335.0], [19.8, 335.0], [19.9, 335.0], [20.0, 399.0], [20.1, 399.0], [20.2, 399.0], [20.3, 399.0], [20.4, 399.0], [20.5, 399.0], [20.6, 399.0], [20.7, 399.0], [20.8, 399.0], [20.9, 399.0], [21.0, 399.0], [21.1, 399.0], [21.2, 399.0], [21.3, 469.0], [21.4, 469.0], [21.5, 469.0], [21.6, 469.0], [21.7, 469.0], [21.8, 469.0], [21.9, 469.0], [22.0, 469.0], [22.1, 469.0], [22.2, 469.0], [22.3, 469.0], [22.4, 469.0], [22.5, 475.0], [22.6, 475.0], [22.7, 475.0], [22.8, 475.0], [22.9, 475.0], [23.0, 475.0], [23.1, 475.0], [23.2, 475.0], [23.3, 475.0], [23.4, 475.0], [23.5, 475.0], [23.6, 475.0], [23.7, 475.0], [23.8, 485.0], [23.9, 485.0], [24.0, 485.0], [24.1, 485.0], [24.2, 485.0], [24.3, 485.0], [24.4, 485.0], [24.5, 485.0], [24.6, 485.0], [24.7, 485.0], [24.8, 485.0], [24.9, 485.0], [25.0, 487.0], [25.1, 487.0], [25.2, 487.0], [25.3, 487.0], [25.4, 487.0], [25.5, 487.0], [25.6, 487.0], [25.7, 487.0], [25.8, 487.0], [25.9, 487.0], [26.0, 487.0], [26.1, 487.0], [26.2, 487.0], [26.3, 489.0], [26.4, 489.0], [26.5, 489.0], [26.6, 489.0], [26.7, 489.0], [26.8, 489.0], [26.9, 489.0], [27.0, 489.0], [27.1, 489.0], [27.2, 489.0], [27.3, 489.0], [27.4, 489.0], [27.5, 495.0], [27.6, 495.0], [27.7, 495.0], [27.8, 495.0], [27.9, 495.0], [28.0, 495.0], [28.1, 495.0], [28.2, 495.0], [28.3, 495.0], [28.4, 495.0], [28.5, 495.0], [28.6, 495.0], [28.7, 495.0], [28.8, 498.0], [28.9, 498.0], [29.0, 498.0], [29.1, 498.0], [29.2, 498.0], [29.3, 498.0], [29.4, 498.0], [29.5, 498.0], [29.6, 498.0], [29.7, 498.0], [29.8, 498.0], [29.9, 498.0], [30.0, 498.0], [30.1, 498.0], [30.2, 498.0], [30.3, 498.0], [30.4, 498.0], [30.5, 498.0], [30.6, 498.0], [30.7, 498.0], [30.8, 498.0], [30.9, 498.0], [31.0, 498.0], [31.1, 498.0], [31.2, 498.0], [31.3, 511.0], [31.4, 511.0], [31.5, 511.0], [31.6, 511.0], [31.7, 511.0], [31.8, 511.0], [31.9, 511.0], [32.0, 511.0], [32.1, 511.0], [32.2, 511.0], [32.3, 511.0], [32.4, 511.0], [32.5, 518.0], [32.6, 518.0], [32.7, 518.0], [32.8, 518.0], [32.9, 518.0], [33.0, 518.0], [33.1, 518.0], [33.2, 518.0], [33.3, 518.0], [33.4, 518.0], [33.5, 518.0], [33.6, 518.0], [33.7, 518.0], [33.8, 529.0], [33.9, 529.0], [34.0, 529.0], [34.1, 529.0], [34.2, 529.0], [34.3, 529.0], [34.4, 529.0], [34.5, 529.0], [34.6, 529.0], [34.7, 529.0], [34.8, 529.0], [34.9, 529.0], [35.0, 534.0], [35.1, 534.0], [35.2, 534.0], [35.3, 534.0], [35.4, 534.0], [35.5, 534.0], [35.6, 534.0], [35.7, 534.0], [35.8, 534.0], [35.9, 534.0], [36.0, 534.0], [36.1, 534.0], [36.2, 534.0], [36.3, 537.0], [36.4, 537.0], [36.5, 537.0], [36.6, 537.0], [36.7, 537.0], [36.8, 537.0], [36.9, 537.0], [37.0, 537.0], [37.1, 537.0], [37.2, 537.0], [37.3, 537.0], [37.4, 537.0], [37.5, 547.0], [37.6, 547.0], [37.7, 547.0], [37.8, 547.0], [37.9, 547.0], [38.0, 547.0], [38.1, 547.0], [38.2, 547.0], [38.3, 547.0], [38.4, 547.0], [38.5, 547.0], [38.6, 547.0], [38.7, 547.0], [38.8, 547.0], [38.9, 547.0], [39.0, 547.0], [39.1, 547.0], [39.2, 547.0], [39.3, 547.0], [39.4, 547.0], [39.5, 547.0], [39.6, 547.0], [39.7, 547.0], [39.8, 547.0], [39.9, 547.0], [40.0, 550.0], [40.1, 550.0], [40.2, 550.0], [40.3, 550.0], [40.4, 550.0], [40.5, 550.0], [40.6, 550.0], [40.7, 550.0], [40.8, 550.0], [40.9, 550.0], [41.0, 550.0], [41.1, 550.0], [41.2, 550.0], [41.3, 550.0], [41.4, 550.0], [41.5, 550.0], [41.6, 550.0], [41.7, 550.0], [41.8, 550.0], [41.9, 550.0], [42.0, 550.0], [42.1, 550.0], [42.2, 550.0], [42.3, 550.0], [42.4, 550.0], [42.5, 551.0], [42.6, 551.0], [42.7, 551.0], [42.8, 551.0], [42.9, 551.0], [43.0, 551.0], [43.1, 551.0], [43.2, 551.0], [43.3, 551.0], [43.4, 551.0], [43.5, 551.0], [43.6, 551.0], [43.7, 551.0], [43.8, 559.0], [43.9, 559.0], [44.0, 559.0], [44.1, 559.0], [44.2, 559.0], [44.3, 559.0], [44.4, 559.0], [44.5, 559.0], [44.6, 559.0], [44.7, 559.0], [44.8, 559.0], [44.9, 559.0], [45.0, 564.0], [45.1, 564.0], [45.2, 564.0], [45.3, 564.0], [45.4, 564.0], [45.5, 564.0], [45.6, 564.0], [45.7, 564.0], [45.8, 564.0], [45.9, 564.0], [46.0, 564.0], [46.1, 564.0], [46.2, 564.0], [46.3, 567.0], [46.4, 567.0], [46.5, 567.0], [46.6, 567.0], [46.7, 567.0], [46.8, 567.0], [46.9, 567.0], [47.0, 567.0], [47.1, 567.0], [47.2, 567.0], [47.3, 567.0], [47.4, 567.0], [47.5, 604.0], [47.6, 604.0], [47.7, 604.0], [47.8, 604.0], [47.9, 604.0], [48.0, 604.0], [48.1, 604.0], [48.2, 604.0], [48.3, 604.0], [48.4, 604.0], [48.5, 604.0], [48.6, 604.0], [48.7, 604.0], [48.8, 615.0], [48.9, 615.0], [49.0, 615.0], [49.1, 615.0], [49.2, 615.0], [49.3, 615.0], [49.4, 615.0], [49.5, 615.0], [49.6, 615.0], [49.7, 615.0], [49.8, 615.0], [49.9, 615.0], [50.0, 625.0], [50.1, 625.0], [50.2, 625.0], [50.3, 625.0], [50.4, 625.0], [50.5, 625.0], [50.6, 625.0], [50.7, 625.0], [50.8, 625.0], [50.9, 625.0], [51.0, 625.0], [51.1, 625.0], [51.2, 625.0], [51.3, 636.0], [51.4, 636.0], [51.5, 636.0], [51.6, 636.0], [51.7, 636.0], [51.8, 636.0], [51.9, 636.0], [52.0, 636.0], [52.1, 636.0], [52.2, 636.0], [52.3, 636.0], [52.4, 636.0], [52.5, 653.0], [52.6, 653.0], [52.7, 653.0], [52.8, 653.0], [52.9, 653.0], [53.0, 653.0], [53.1, 653.0], [53.2, 653.0], [53.3, 653.0], [53.4, 653.0], [53.5, 653.0], [53.6, 653.0], [53.7, 653.0], [53.8, 663.0], [53.9, 663.0], [54.0, 663.0], [54.1, 663.0], [54.2, 663.0], [54.3, 663.0], [54.4, 663.0], [54.5, 663.0], [54.6, 663.0], [54.7, 663.0], [54.8, 663.0], [54.9, 663.0], [55.0, 675.0], [55.1, 675.0], [55.2, 675.0], [55.3, 675.0], [55.4, 675.0], [55.5, 675.0], [55.6, 675.0], [55.7, 675.0], [55.8, 675.0], [55.9, 675.0], [56.0, 675.0], [56.1, 675.0], [56.2, 675.0], [56.3, 786.0], [56.4, 786.0], [56.5, 786.0], [56.6, 786.0], [56.7, 786.0], [56.8, 786.0], [56.9, 786.0], [57.0, 786.0], [57.1, 786.0], [57.2, 786.0], [57.3, 786.0], [57.4, 786.0], [57.5, 810.0], [57.6, 810.0], [57.7, 810.0], [57.8, 810.0], [57.9, 810.0], [58.0, 810.0], [58.1, 810.0], [58.2, 810.0], [58.3, 810.0], [58.4, 810.0], [58.5, 810.0], [58.6, 810.0], [58.7, 810.0], [58.8, 879.0], [58.9, 879.0], [59.0, 879.0], [59.1, 879.0], [59.2, 879.0], [59.3, 879.0], [59.4, 879.0], [59.5, 879.0], [59.6, 879.0], [59.7, 879.0], [59.8, 879.0], [59.9, 879.0], [60.0, 892.0], [60.1, 892.0], [60.2, 892.0], [60.3, 892.0], [60.4, 892.0], [60.5, 892.0], [60.6, 892.0], [60.7, 892.0], [60.8, 892.0], [60.9, 892.0], [61.0, 892.0], [61.1, 892.0], [61.2, 892.0], [61.3, 905.0], [61.4, 905.0], [61.5, 905.0], [61.6, 905.0], [61.7, 905.0], [61.8, 905.0], [61.9, 905.0], [62.0, 905.0], [62.1, 905.0], [62.2, 905.0], [62.3, 905.0], [62.4, 905.0], [62.5, 928.0], [62.6, 928.0], [62.7, 928.0], [62.8, 928.0], [62.9, 928.0], [63.0, 928.0], [63.1, 928.0], [63.2, 928.0], [63.3, 928.0], [63.4, 928.0], [63.5, 928.0], [63.6, 928.0], [63.7, 928.0], [63.8, 936.0], [63.9, 936.0], [64.0, 936.0], [64.1, 936.0], [64.2, 936.0], [64.3, 936.0], [64.4, 936.0], [64.5, 936.0], [64.6, 936.0], [64.7, 936.0], [64.8, 936.0], [64.9, 936.0], [65.0, 956.0], [65.1, 956.0], [65.2, 956.0], [65.3, 956.0], [65.4, 956.0], [65.5, 956.0], [65.6, 956.0], [65.7, 956.0], [65.8, 956.0], [65.9, 956.0], [66.0, 956.0], [66.1, 956.0], [66.2, 956.0], [66.3, 962.0], [66.4, 962.0], [66.5, 962.0], [66.6, 962.0], [66.7, 962.0], [66.8, 962.0], [66.9, 962.0], [67.0, 962.0], [67.1, 962.0], [67.2, 962.0], [67.3, 962.0], [67.4, 962.0], [67.5, 1158.0], [67.6, 1158.0], [67.7, 1158.0], [67.8, 1158.0], [67.9, 1158.0], [68.0, 1158.0], [68.1, 1158.0], [68.2, 1158.0], [68.3, 1158.0], [68.4, 1158.0], [68.5, 1158.0], [68.6, 1158.0], [68.7, 1158.0], [68.8, 1244.0], [68.9, 1244.0], [69.0, 1244.0], [69.1, 1244.0], [69.2, 1244.0], [69.3, 1244.0], [69.4, 1244.0], [69.5, 1244.0], [69.6, 1244.0], [69.7, 1244.0], [69.8, 1244.0], [69.9, 1244.0], [70.0, 1297.0], [70.1, 1297.0], [70.2, 1297.0], [70.3, 1297.0], [70.4, 1297.0], [70.5, 1297.0], [70.6, 1297.0], [70.7, 1297.0], [70.8, 1297.0], [70.9, 1297.0], [71.0, 1297.0], [71.1, 1297.0], [71.2, 1297.0], [71.3, 1440.0], [71.4, 1440.0], [71.5, 1440.0], [71.6, 1440.0], [71.7, 1440.0], [71.8, 1440.0], [71.9, 1440.0], [72.0, 1440.0], [72.1, 1440.0], [72.2, 1440.0], [72.3, 1440.0], [72.4, 1440.0], [72.5, 1523.0], [72.6, 1523.0], [72.7, 1523.0], [72.8, 1523.0], [72.9, 1523.0], [73.0, 1523.0], [73.1, 1523.0], [73.2, 1523.0], [73.3, 1523.0], [73.4, 1523.0], [73.5, 1523.0], [73.6, 1523.0], [73.7, 1523.0], [73.8, 2791.0], [73.9, 2791.0], [74.0, 2791.0], [74.1, 2791.0], [74.2, 2791.0], [74.3, 2791.0], [74.4, 2791.0], [74.5, 2791.0], [74.6, 2791.0], [74.7, 2791.0], [74.8, 2791.0], [74.9, 2791.0], [75.0, 2876.0], [75.1, 2876.0], [75.2, 2876.0], [75.3, 2876.0], [75.4, 2876.0], [75.5, 2876.0], [75.6, 2876.0], [75.7, 2876.0], [75.8, 2876.0], [75.9, 2876.0], [76.0, 2876.0], [76.1, 2876.0], [76.2, 2876.0], [76.3, 3019.0], [76.4, 3019.0], [76.5, 3019.0], [76.6, 3019.0], [76.7, 3019.0], [76.8, 3019.0], [76.9, 3019.0], [77.0, 3019.0], [77.1, 3019.0], [77.2, 3019.0], [77.3, 3019.0], [77.4, 3019.0], [77.5, 3027.0], [77.6, 3027.0], [77.7, 3027.0], [77.8, 3027.0], [77.9, 3027.0], [78.0, 3027.0], [78.1, 3027.0], [78.2, 3027.0], [78.3, 3027.0], [78.4, 3027.0], [78.5, 3027.0], [78.6, 3027.0], [78.7, 3027.0], [78.8, 3253.0], [78.9, 3253.0], [79.0, 3253.0], [79.1, 3253.0], [79.2, 3253.0], [79.3, 3253.0], [79.4, 3253.0], [79.5, 3253.0], [79.6, 3253.0], [79.7, 3253.0], [79.8, 3253.0], [79.9, 3253.0], [80.0, 3297.0], [80.1, 3297.0], [80.2, 3297.0], [80.3, 3297.0], [80.4, 3297.0], [80.5, 3297.0], [80.6, 3297.0], [80.7, 3297.0], [80.8, 3297.0], [80.9, 3297.0], [81.0, 3297.0], [81.1, 3297.0], [81.2, 3297.0], [81.3, 3299.0], [81.4, 3299.0], [81.5, 3299.0], [81.6, 3299.0], [81.7, 3299.0], [81.8, 3299.0], [81.9, 3299.0], [82.0, 3299.0], [82.1, 3299.0], [82.2, 3299.0], [82.3, 3299.0], [82.4, 3299.0], [82.5, 3332.0], [82.6, 3332.0], [82.7, 3332.0], [82.8, 3332.0], [82.9, 3332.0], [83.0, 3332.0], [83.1, 3332.0], [83.2, 3332.0], [83.3, 3332.0], [83.4, 3332.0], [83.5, 3332.0], [83.6, 3332.0], [83.7, 3332.0], [83.8, 3333.0], [83.9, 3333.0], [84.0, 3333.0], [84.1, 3333.0], [84.2, 3333.0], [84.3, 3333.0], [84.4, 3333.0], [84.5, 3333.0], [84.6, 3333.0], [84.7, 3333.0], [84.8, 3333.0], [84.9, 3333.0], [85.0, 3351.0], [85.1, 3351.0], [85.2, 3351.0], [85.3, 3351.0], [85.4, 3351.0], [85.5, 3351.0], [85.6, 3351.0], [85.7, 3351.0], [85.8, 3351.0], [85.9, 3351.0], [86.0, 3351.0], [86.1, 3351.0], [86.2, 3351.0], [86.3, 3392.0], [86.4, 3392.0], [86.5, 3392.0], [86.6, 3392.0], [86.7, 3392.0], [86.8, 3392.0], [86.9, 3392.0], [87.0, 3392.0], [87.1, 3392.0], [87.2, 3392.0], [87.3, 3392.0], [87.4, 3392.0], [87.5, 3434.0], [87.6, 3434.0], [87.7, 3434.0], [87.8, 3434.0], [87.9, 3434.0], [88.0, 3434.0], [88.1, 3434.0], [88.2, 3434.0], [88.3, 3434.0], [88.4, 3434.0], [88.5, 3434.0], [88.6, 3434.0], [88.7, 3434.0], [88.8, 3462.0], [88.9, 3462.0], [89.0, 3462.0], [89.1, 3462.0], [89.2, 3462.0], [89.3, 3462.0], [89.4, 3462.0], [89.5, 3462.0], [89.6, 3462.0], [89.7, 3462.0], [89.8, 3462.0], [89.9, 3462.0], [90.0, 3470.0], [90.1, 3470.0], [90.2, 3470.0], [90.3, 3470.0], [90.4, 3470.0], [90.5, 3470.0], [90.6, 3470.0], [90.7, 3470.0], [90.8, 3470.0], [90.9, 3470.0], [91.0, 3470.0], [91.1, 3470.0], [91.2, 3470.0], [91.3, 3831.0], [91.4, 3831.0], [91.5, 3831.0], [91.6, 3831.0], [91.7, 3831.0], [91.8, 3831.0], [91.9, 3831.0], [92.0, 3831.0], [92.1, 3831.0], [92.2, 3831.0], [92.3, 3831.0], [92.4, 3831.0], [92.5, 3879.0], [92.6, 3879.0], [92.7, 3879.0], [92.8, 3879.0], [92.9, 3879.0], [93.0, 3879.0], [93.1, 3879.0], [93.2, 3879.0], [93.3, 3879.0], [93.4, 3879.0], [93.5, 3879.0], [93.6, 3879.0], [93.7, 3879.0], [93.8, 5018.0], [93.9, 5018.0], [94.0, 5018.0], [94.1, 5018.0], [94.2, 5018.0], [94.3, 5018.0], [94.4, 5018.0], [94.5, 5018.0], [94.6, 5018.0], [94.7, 5018.0], [94.8, 5018.0], [94.9, 5018.0], [95.0, 5033.0], [95.1, 5033.0], [95.2, 5033.0], [95.3, 5033.0], [95.4, 5033.0], [95.5, 5033.0], [95.6, 5033.0], [95.7, 5033.0], [95.8, 5033.0], [95.9, 5033.0], [96.0, 5033.0], [96.1, 5033.0], [96.2, 5033.0], [96.3, 5487.0], [96.4, 5487.0], [96.5, 5487.0], [96.6, 5487.0], [96.7, 5487.0], [96.8, 5487.0], [96.9, 5487.0], [97.0, 5487.0], [97.1, 5487.0], [97.2, 5487.0], [97.3, 5487.0], [97.4, 5487.0], [97.5, 5570.0], [97.6, 5570.0], [97.7, 5570.0], [97.8, 5570.0], [97.9, 5570.0], [98.0, 5570.0], [98.1, 5570.0], [98.2, 5570.0], [98.3, 5570.0], [98.4, 5570.0], [98.5, 5570.0], [98.6, 5570.0], [98.7, 5570.0], [98.8, 5617.0], [98.9, 5617.0], [99.0, 5617.0], [99.1, 5617.0], [99.2, 5617.0], [99.3, 5617.0], [99.4, 5617.0], [99.5, 5617.0], [99.6, 5617.0], [99.7, 5617.0], [99.8, 5617.0], [99.9, 5617.0]], "isOverall": false, "label": "Token-1", "isController": false}, {"data": [[0.0, 277.0], [0.1, 277.0], [0.2, 277.0], [0.3, 277.0], [0.4, 277.0], [0.5, 277.0], [0.6, 277.0], [0.7, 277.0], [0.8, 277.0], [0.9, 277.0], [1.0, 277.0], [1.1, 277.0], [1.2, 277.0], [1.3, 291.0], [1.4, 291.0], [1.5, 291.0], [1.6, 291.0], [1.7, 291.0], [1.8, 291.0], [1.9, 291.0], [2.0, 291.0], [2.1, 291.0], [2.2, 291.0], [2.3, 291.0], [2.4, 291.0], [2.5, 301.0], [2.6, 301.0], [2.7, 301.0], [2.8, 301.0], [2.9, 301.0], [3.0, 301.0], [3.1, 301.0], [3.2, 301.0], [3.3, 301.0], [3.4, 301.0], [3.5, 301.0], [3.6, 301.0], [3.7, 301.0], [3.8, 328.0], [3.9, 328.0], [4.0, 328.0], [4.1, 328.0], [4.2, 328.0], [4.3, 328.0], [4.4, 328.0], [4.5, 328.0], [4.6, 328.0], [4.7, 328.0], [4.8, 328.0], [4.9, 328.0], [5.0, 329.0], [5.1, 329.0], [5.2, 329.0], [5.3, 329.0], [5.4, 329.0], [5.5, 329.0], [5.6, 329.0], [5.7, 329.0], [5.8, 329.0], [5.9, 329.0], [6.0, 329.0], [6.1, 329.0], [6.2, 329.0], [6.3, 347.0], [6.4, 347.0], [6.5, 347.0], [6.6, 347.0], [6.7, 347.0], [6.8, 347.0], [6.9, 347.0], [7.0, 347.0], [7.1, 347.0], [7.2, 347.0], [7.3, 347.0], [7.4, 347.0], [7.5, 351.0], [7.6, 351.0], [7.7, 351.0], [7.8, 351.0], [7.9, 351.0], [8.0, 351.0], [8.1, 351.0], [8.2, 351.0], [8.3, 351.0], [8.4, 351.0], [8.5, 351.0], [8.6, 351.0], [8.7, 351.0], [8.8, 355.0], [8.9, 355.0], [9.0, 355.0], [9.1, 355.0], [9.2, 355.0], [9.3, 355.0], [9.4, 355.0], [9.5, 355.0], [9.6, 355.0], [9.7, 355.0], [9.8, 355.0], [9.9, 355.0], [10.0, 363.0], [10.1, 363.0], [10.2, 363.0], [10.3, 363.0], [10.4, 363.0], [10.5, 363.0], [10.6, 363.0], [10.7, 363.0], [10.8, 363.0], [10.9, 363.0], [11.0, 363.0], [11.1, 363.0], [11.2, 363.0], [11.3, 366.0], [11.4, 366.0], [11.5, 366.0], [11.6, 366.0], [11.7, 366.0], [11.8, 366.0], [11.9, 366.0], [12.0, 366.0], [12.1, 366.0], [12.2, 366.0], [12.3, 366.0], [12.4, 366.0], [12.5, 374.0], [12.6, 374.0], [12.7, 374.0], [12.8, 374.0], [12.9, 374.0], [13.0, 374.0], [13.1, 374.0], [13.2, 374.0], [13.3, 374.0], [13.4, 374.0], [13.5, 374.0], [13.6, 374.0], [13.7, 374.0], [13.8, 375.0], [13.9, 375.0], [14.0, 375.0], [14.1, 375.0], [14.2, 375.0], [14.3, 375.0], [14.4, 375.0], [14.5, 375.0], [14.6, 375.0], [14.7, 375.0], [14.8, 375.0], [14.9, 375.0], [15.0, 389.0], [15.1, 389.0], [15.2, 389.0], [15.3, 389.0], [15.4, 389.0], [15.5, 389.0], [15.6, 389.0], [15.7, 389.0], [15.8, 389.0], [15.9, 389.0], [16.0, 389.0], [16.1, 389.0], [16.2, 389.0], [16.3, 521.0], [16.4, 521.0], [16.5, 521.0], [16.6, 521.0], [16.7, 521.0], [16.8, 521.0], [16.9, 521.0], [17.0, 521.0], [17.1, 521.0], [17.2, 521.0], [17.3, 521.0], [17.4, 521.0], [17.5, 526.0], [17.6, 526.0], [17.7, 526.0], [17.8, 526.0], [17.9, 526.0], [18.0, 526.0], [18.1, 526.0], [18.2, 526.0], [18.3, 526.0], [18.4, 526.0], [18.5, 526.0], [18.6, 526.0], [18.7, 526.0], [18.8, 535.0], [18.9, 535.0], [19.0, 535.0], [19.1, 535.0], [19.2, 535.0], [19.3, 535.0], [19.4, 535.0], [19.5, 535.0], [19.6, 535.0], [19.7, 535.0], [19.8, 535.0], [19.9, 535.0], [20.0, 536.0], [20.1, 536.0], [20.2, 536.0], [20.3, 536.0], [20.4, 536.0], [20.5, 536.0], [20.6, 536.0], [20.7, 536.0], [20.8, 536.0], [20.9, 536.0], [21.0, 536.0], [21.1, 536.0], [21.2, 536.0], [21.3, 551.0], [21.4, 551.0], [21.5, 551.0], [21.6, 551.0], [21.7, 551.0], [21.8, 551.0], [21.9, 551.0], [22.0, 551.0], [22.1, 551.0], [22.2, 551.0], [22.3, 551.0], [22.4, 551.0], [22.5, 559.0], [22.6, 559.0], [22.7, 559.0], [22.8, 559.0], [22.9, 559.0], [23.0, 559.0], [23.1, 559.0], [23.2, 559.0], [23.3, 559.0], [23.4, 559.0], [23.5, 559.0], [23.6, 559.0], [23.7, 559.0], [23.8, 573.0], [23.9, 573.0], [24.0, 573.0], [24.1, 573.0], [24.2, 573.0], [24.3, 573.0], [24.4, 573.0], [24.5, 573.0], [24.6, 573.0], [24.7, 573.0], [24.8, 573.0], [24.9, 573.0], [25.0, 576.0], [25.1, 576.0], [25.2, 576.0], [25.3, 576.0], [25.4, 576.0], [25.5, 576.0], [25.6, 576.0], [25.7, 576.0], [25.8, 576.0], [25.9, 576.0], [26.0, 576.0], [26.1, 576.0], [26.2, 576.0], [26.3, 582.0], [26.4, 582.0], [26.5, 582.0], [26.6, 582.0], [26.7, 582.0], [26.8, 582.0], [26.9, 582.0], [27.0, 582.0], [27.1, 582.0], [27.2, 582.0], [27.3, 582.0], [27.4, 582.0], [27.5, 596.0], [27.6, 596.0], [27.7, 596.0], [27.8, 596.0], [27.9, 596.0], [28.0, 596.0], [28.1, 596.0], [28.2, 596.0], [28.3, 596.0], [28.4, 596.0], [28.5, 596.0], [28.6, 596.0], [28.7, 596.0], [28.8, 596.0], [28.9, 596.0], [29.0, 596.0], [29.1, 596.0], [29.2, 596.0], [29.3, 596.0], [29.4, 596.0], [29.5, 596.0], [29.6, 596.0], [29.7, 596.0], [29.8, 596.0], [29.9, 596.0], [30.0, 598.0], [30.1, 598.0], [30.2, 598.0], [30.3, 598.0], [30.4, 598.0], [30.5, 598.0], [30.6, 598.0], [30.7, 598.0], [30.8, 598.0], [30.9, 598.0], [31.0, 598.0], [31.1, 598.0], [31.2, 598.0], [31.3, 614.0], [31.4, 614.0], [31.5, 614.0], [31.6, 614.0], [31.7, 614.0], [31.8, 614.0], [31.9, 614.0], [32.0, 614.0], [32.1, 614.0], [32.2, 614.0], [32.3, 614.0], [32.4, 614.0], [32.5, 619.0], [32.6, 619.0], [32.7, 619.0], [32.8, 619.0], [32.9, 619.0], [33.0, 619.0], [33.1, 619.0], [33.2, 619.0], [33.3, 619.0], [33.4, 619.0], [33.5, 619.0], [33.6, 619.0], [33.7, 619.0], [33.8, 637.0], [33.9, 637.0], [34.0, 637.0], [34.1, 637.0], [34.2, 637.0], [34.3, 637.0], [34.4, 637.0], [34.5, 637.0], [34.6, 637.0], [34.7, 637.0], [34.8, 637.0], [34.9, 637.0], [35.0, 638.0], [35.1, 638.0], [35.2, 638.0], [35.3, 638.0], [35.4, 638.0], [35.5, 638.0], [35.6, 638.0], [35.7, 638.0], [35.8, 638.0], [35.9, 638.0], [36.0, 638.0], [36.1, 638.0], [36.2, 638.0], [36.3, 645.0], [36.4, 645.0], [36.5, 645.0], [36.6, 645.0], [36.7, 645.0], [36.8, 645.0], [36.9, 645.0], [37.0, 645.0], [37.1, 645.0], [37.2, 645.0], [37.3, 645.0], [37.4, 645.0], [37.5, 647.0], [37.6, 647.0], [37.7, 647.0], [37.8, 647.0], [37.9, 647.0], [38.0, 647.0], [38.1, 647.0], [38.2, 647.0], [38.3, 647.0], [38.4, 647.0], [38.5, 647.0], [38.6, 647.0], [38.7, 647.0], [38.8, 648.0], [38.9, 648.0], [39.0, 648.0], [39.1, 648.0], [39.2, 648.0], [39.3, 648.0], [39.4, 648.0], [39.5, 648.0], [39.6, 648.0], [39.7, 648.0], [39.8, 648.0], [39.9, 648.0], [40.0, 654.0], [40.1, 654.0], [40.2, 654.0], [40.3, 654.0], [40.4, 654.0], [40.5, 654.0], [40.6, 654.0], [40.7, 654.0], [40.8, 654.0], [40.9, 654.0], [41.0, 654.0], [41.1, 654.0], [41.2, 654.0], [41.3, 660.0], [41.4, 660.0], [41.5, 660.0], [41.6, 660.0], [41.7, 660.0], [41.8, 660.0], [41.9, 660.0], [42.0, 660.0], [42.1, 660.0], [42.2, 660.0], [42.3, 660.0], [42.4, 660.0], [42.5, 663.0], [42.6, 663.0], [42.7, 663.0], [42.8, 663.0], [42.9, 663.0], [43.0, 663.0], [43.1, 663.0], [43.2, 663.0], [43.3, 663.0], [43.4, 663.0], [43.5, 663.0], [43.6, 663.0], [43.7, 663.0], [43.8, 682.0], [43.9, 682.0], [44.0, 682.0], [44.1, 682.0], [44.2, 682.0], [44.3, 682.0], [44.4, 682.0], [44.5, 682.0], [44.6, 682.0], [44.7, 682.0], [44.8, 682.0], [44.9, 682.0], [45.0, 693.0], [45.1, 693.0], [45.2, 693.0], [45.3, 693.0], [45.4, 693.0], [45.5, 693.0], [45.6, 693.0], [45.7, 693.0], [45.8, 693.0], [45.9, 693.0], [46.0, 693.0], [46.1, 693.0], [46.2, 693.0], [46.3, 726.0], [46.4, 726.0], [46.5, 726.0], [46.6, 726.0], [46.7, 726.0], [46.8, 726.0], [46.9, 726.0], [47.0, 726.0], [47.1, 726.0], [47.2, 726.0], [47.3, 726.0], [47.4, 726.0], [47.5, 737.0], [47.6, 737.0], [47.7, 737.0], [47.8, 737.0], [47.9, 737.0], [48.0, 737.0], [48.1, 737.0], [48.2, 737.0], [48.3, 737.0], [48.4, 737.0], [48.5, 737.0], [48.6, 737.0], [48.7, 737.0], [48.8, 796.0], [48.9, 796.0], [49.0, 796.0], [49.1, 796.0], [49.2, 796.0], [49.3, 796.0], [49.4, 796.0], [49.5, 796.0], [49.6, 796.0], [49.7, 796.0], [49.8, 796.0], [49.9, 796.0], [50.0, 851.0], [50.1, 851.0], [50.2, 851.0], [50.3, 851.0], [50.4, 851.0], [50.5, 851.0], [50.6, 851.0], [50.7, 851.0], [50.8, 851.0], [50.9, 851.0], [51.0, 851.0], [51.1, 851.0], [51.2, 851.0], [51.3, 883.0], [51.4, 883.0], [51.5, 883.0], [51.6, 883.0], [51.7, 883.0], [51.8, 883.0], [51.9, 883.0], [52.0, 883.0], [52.1, 883.0], [52.2, 883.0], [52.3, 883.0], [52.4, 883.0], [52.5, 889.0], [52.6, 889.0], [52.7, 889.0], [52.8, 889.0], [52.9, 889.0], [53.0, 889.0], [53.1, 889.0], [53.2, 889.0], [53.3, 889.0], [53.4, 889.0], [53.5, 889.0], [53.6, 889.0], [53.7, 889.0], [53.8, 913.0], [53.9, 913.0], [54.0, 913.0], [54.1, 913.0], [54.2, 913.0], [54.3, 913.0], [54.4, 913.0], [54.5, 913.0], [54.6, 913.0], [54.7, 913.0], [54.8, 913.0], [54.9, 913.0], [55.0, 958.0], [55.1, 958.0], [55.2, 958.0], [55.3, 958.0], [55.4, 958.0], [55.5, 958.0], [55.6, 958.0], [55.7, 958.0], [55.8, 958.0], [55.9, 958.0], [56.0, 958.0], [56.1, 958.0], [56.2, 958.0], [56.3, 963.0], [56.4, 963.0], [56.5, 963.0], [56.6, 963.0], [56.7, 963.0], [56.8, 963.0], [56.9, 963.0], [57.0, 963.0], [57.1, 963.0], [57.2, 963.0], [57.3, 963.0], [57.4, 963.0], [57.5, 978.0], [57.6, 978.0], [57.7, 978.0], [57.8, 978.0], [57.9, 978.0], [58.0, 978.0], [58.1, 978.0], [58.2, 978.0], [58.3, 978.0], [58.4, 978.0], [58.5, 978.0], [58.6, 978.0], [58.7, 978.0], [58.8, 982.0], [58.9, 982.0], [59.0, 982.0], [59.1, 982.0], [59.2, 982.0], [59.3, 982.0], [59.4, 982.0], [59.5, 982.0], [59.6, 982.0], [59.7, 982.0], [59.8, 982.0], [59.9, 982.0], [60.0, 1001.0], [60.1, 1001.0], [60.2, 1001.0], [60.3, 1001.0], [60.4, 1001.0], [60.5, 1001.0], [60.6, 1001.0], [60.7, 1001.0], [60.8, 1001.0], [60.9, 1001.0], [61.0, 1001.0], [61.1, 1001.0], [61.2, 1001.0], [61.3, 1011.0], [61.4, 1011.0], [61.5, 1011.0], [61.6, 1011.0], [61.7, 1011.0], [61.8, 1011.0], [61.9, 1011.0], [62.0, 1011.0], [62.1, 1011.0], [62.2, 1011.0], [62.3, 1011.0], [62.4, 1011.0], [62.5, 1045.0], [62.6, 1045.0], [62.7, 1045.0], [62.8, 1045.0], [62.9, 1045.0], [63.0, 1045.0], [63.1, 1045.0], [63.2, 1045.0], [63.3, 1045.0], [63.4, 1045.0], [63.5, 1045.0], [63.6, 1045.0], [63.7, 1045.0], [63.8, 1080.0], [63.9, 1080.0], [64.0, 1080.0], [64.1, 1080.0], [64.2, 1080.0], [64.3, 1080.0], [64.4, 1080.0], [64.5, 1080.0], [64.6, 1080.0], [64.7, 1080.0], [64.8, 1080.0], [64.9, 1080.0], [65.0, 1154.0], [65.1, 1154.0], [65.2, 1154.0], [65.3, 1154.0], [65.4, 1154.0], [65.5, 1154.0], [65.6, 1154.0], [65.7, 1154.0], [65.8, 1154.0], [65.9, 1154.0], [66.0, 1154.0], [66.1, 1154.0], [66.2, 1154.0], [66.3, 1300.0], [66.4, 1300.0], [66.5, 1300.0], [66.6, 1300.0], [66.7, 1300.0], [66.8, 1300.0], [66.9, 1300.0], [67.0, 1300.0], [67.1, 1300.0], [67.2, 1300.0], [67.3, 1300.0], [67.4, 1300.0], [67.5, 1355.0], [67.6, 1355.0], [67.7, 1355.0], [67.8, 1355.0], [67.9, 1355.0], [68.0, 1355.0], [68.1, 1355.0], [68.2, 1355.0], [68.3, 1355.0], [68.4, 1355.0], [68.5, 1355.0], [68.6, 1355.0], [68.7, 1355.0], [68.8, 1508.0], [68.9, 1508.0], [69.0, 1508.0], [69.1, 1508.0], [69.2, 1508.0], [69.3, 1508.0], [69.4, 1508.0], [69.5, 1508.0], [69.6, 1508.0], [69.7, 1508.0], [69.8, 1508.0], [69.9, 1508.0], [70.0, 1859.0], [70.1, 1859.0], [70.2, 1859.0], [70.3, 1859.0], [70.4, 1859.0], [70.5, 1859.0], [70.6, 1859.0], [70.7, 1859.0], [70.8, 1859.0], [70.9, 1859.0], [71.0, 1859.0], [71.1, 1859.0], [71.2, 1859.0], [71.3, 1906.0], [71.4, 1906.0], [71.5, 1906.0], [71.6, 1906.0], [71.7, 1906.0], [71.8, 1906.0], [71.9, 1906.0], [72.0, 1906.0], [72.1, 1906.0], [72.2, 1906.0], [72.3, 1906.0], [72.4, 1906.0], [72.5, 2046.0], [72.6, 2046.0], [72.7, 2046.0], [72.8, 2046.0], [72.9, 2046.0], [73.0, 2046.0], [73.1, 2046.0], [73.2, 2046.0], [73.3, 2046.0], [73.4, 2046.0], [73.5, 2046.0], [73.6, 2046.0], [73.7, 2046.0], [73.8, 3143.0], [73.9, 3143.0], [74.0, 3143.0], [74.1, 3143.0], [74.2, 3143.0], [74.3, 3143.0], [74.4, 3143.0], [74.5, 3143.0], [74.6, 3143.0], [74.7, 3143.0], [74.8, 3143.0], [74.9, 3143.0], [75.0, 3329.0], [75.1, 3329.0], [75.2, 3329.0], [75.3, 3329.0], [75.4, 3329.0], [75.5, 3329.0], [75.6, 3329.0], [75.7, 3329.0], [75.8, 3329.0], [75.9, 3329.0], [76.0, 3329.0], [76.1, 3329.0], [76.2, 3329.0], [76.3, 3384.0], [76.4, 3384.0], [76.5, 3384.0], [76.6, 3384.0], [76.7, 3384.0], [76.8, 3384.0], [76.9, 3384.0], [77.0, 3384.0], [77.1, 3384.0], [77.2, 3384.0], [77.3, 3384.0], [77.4, 3384.0], [77.5, 3499.0], [77.6, 3499.0], [77.7, 3499.0], [77.8, 3499.0], [77.9, 3499.0], [78.0, 3499.0], [78.1, 3499.0], [78.2, 3499.0], [78.3, 3499.0], [78.4, 3499.0], [78.5, 3499.0], [78.6, 3499.0], [78.7, 3499.0], [78.8, 3529.0], [78.9, 3529.0], [79.0, 3529.0], [79.1, 3529.0], [79.2, 3529.0], [79.3, 3529.0], [79.4, 3529.0], [79.5, 3529.0], [79.6, 3529.0], [79.7, 3529.0], [79.8, 3529.0], [79.9, 3529.0], [80.0, 3553.0], [80.1, 3553.0], [80.2, 3553.0], [80.3, 3553.0], [80.4, 3553.0], [80.5, 3553.0], [80.6, 3553.0], [80.7, 3553.0], [80.8, 3553.0], [80.9, 3553.0], [81.0, 3553.0], [81.1, 3553.0], [81.2, 3553.0], [81.3, 3595.0], [81.4, 3595.0], [81.5, 3595.0], [81.6, 3595.0], [81.7, 3595.0], [81.8, 3595.0], [81.9, 3595.0], [82.0, 3595.0], [82.1, 3595.0], [82.2, 3595.0], [82.3, 3595.0], [82.4, 3595.0], [82.5, 3631.0], [82.6, 3631.0], [82.7, 3631.0], [82.8, 3631.0], [82.9, 3631.0], [83.0, 3631.0], [83.1, 3631.0], [83.2, 3631.0], [83.3, 3631.0], [83.4, 3631.0], [83.5, 3631.0], [83.6, 3631.0], [83.7, 3631.0], [83.8, 3718.0], [83.9, 3718.0], [84.0, 3718.0], [84.1, 3718.0], [84.2, 3718.0], [84.3, 3718.0], [84.4, 3718.0], [84.5, 3718.0], [84.6, 3718.0], [84.7, 3718.0], [84.8, 3718.0], [84.9, 3718.0], [85.0, 3738.0], [85.1, 3738.0], [85.2, 3738.0], [85.3, 3738.0], [85.4, 3738.0], [85.5, 3738.0], [85.6, 3738.0], [85.7, 3738.0], [85.8, 3738.0], [85.9, 3738.0], [86.0, 3738.0], [86.1, 3738.0], [86.2, 3738.0], [86.3, 3782.0], [86.4, 3782.0], [86.5, 3782.0], [86.6, 3782.0], [86.7, 3782.0], [86.8, 3782.0], [86.9, 3782.0], [87.0, 3782.0], [87.1, 3782.0], [87.2, 3782.0], [87.3, 3782.0], [87.4, 3782.0], [87.5, 3820.0], [87.6, 3820.0], [87.7, 3820.0], [87.8, 3820.0], [87.9, 3820.0], [88.0, 3820.0], [88.1, 3820.0], [88.2, 3820.0], [88.3, 3820.0], [88.4, 3820.0], [88.5, 3820.0], [88.6, 3820.0], [88.7, 3820.0], [88.8, 3827.0], [88.9, 3827.0], [89.0, 3827.0], [89.1, 3827.0], [89.2, 3827.0], [89.3, 3827.0], [89.4, 3827.0], [89.5, 3827.0], [89.6, 3827.0], [89.7, 3827.0], [89.8, 3827.0], [89.9, 3827.0], [90.0, 3848.0], [90.1, 3848.0], [90.2, 3848.0], [90.3, 3848.0], [90.4, 3848.0], [90.5, 3848.0], [90.6, 3848.0], [90.7, 3848.0], [90.8, 3848.0], [90.9, 3848.0], [91.0, 3848.0], [91.1, 3848.0], [91.2, 3848.0], [91.3, 4225.0], [91.4, 4225.0], [91.5, 4225.0], [91.6, 4225.0], [91.7, 4225.0], [91.8, 4225.0], [91.9, 4225.0], [92.0, 4225.0], [92.1, 4225.0], [92.2, 4225.0], [92.3, 4225.0], [92.4, 4225.0], [92.5, 4254.0], [92.6, 4254.0], [92.7, 4254.0], [92.8, 4254.0], [92.9, 4254.0], [93.0, 4254.0], [93.1, 4254.0], [93.2, 4254.0], [93.3, 4254.0], [93.4, 4254.0], [93.5, 4254.0], [93.6, 4254.0], [93.7, 4254.0], [93.8, 5441.0], [93.9, 5441.0], [94.0, 5441.0], [94.1, 5441.0], [94.2, 5441.0], [94.3, 5441.0], [94.4, 5441.0], [94.5, 5441.0], [94.6, 5441.0], [94.7, 5441.0], [94.8, 5441.0], [94.9, 5441.0], [95.0, 5579.0], [95.1, 5579.0], [95.2, 5579.0], [95.3, 5579.0], [95.4, 5579.0], [95.5, 5579.0], [95.6, 5579.0], [95.7, 5579.0], [95.8, 5579.0], [95.9, 5579.0], [96.0, 5579.0], [96.1, 5579.0], [96.2, 5579.0], [96.3, 5691.0], [96.4, 5691.0], [96.5, 5691.0], [96.6, 5691.0], [96.7, 5691.0], [96.8, 5691.0], [96.9, 5691.0], [97.0, 5691.0], [97.1, 5691.0], [97.2, 5691.0], [97.3, 5691.0], [97.4, 5691.0], [97.5, 5802.0], [97.6, 5802.0], [97.7, 5802.0], [97.8, 5802.0], [97.9, 5802.0], [98.0, 5802.0], [98.1, 5802.0], [98.2, 5802.0], [98.3, 5802.0], [98.4, 5802.0], [98.5, 5802.0], [98.6, 5802.0], [98.7, 5802.0], [98.8, 5908.0], [98.9, 5908.0], [99.0, 5908.0], [99.1, 5908.0], [99.2, 5908.0], [99.3, 5908.0], [99.4, 5908.0], [99.5, 5908.0], [99.6, 5908.0], [99.7, 5908.0], [99.8, 5908.0], [99.9, 5908.0]], "isOverall": false, "label": "Token", "isController": false}, {"data": [[0.0, 31065.0], [0.1, 31065.0], [0.2, 31065.0], [0.3, 31065.0], [0.4, 31065.0], [0.5, 31065.0], [0.6, 31065.0], [0.7, 31065.0], [0.8, 31065.0], [0.9, 31065.0], [1.0, 31065.0], [1.1, 31065.0], [1.2, 31065.0], [1.3, 32262.0], [1.4, 32262.0], [1.5, 32262.0], [1.6, 32262.0], [1.7, 32262.0], [1.8, 32262.0], [1.9, 32262.0], [2.0, 32262.0], [2.1, 32262.0], [2.2, 32262.0], [2.3, 32262.0], [2.4, 32262.0], [2.5, 33155.0], [2.6, 33155.0], [2.7, 33155.0], [2.8, 33155.0], [2.9, 33155.0], [3.0, 33155.0], [3.1, 33155.0], [3.2, 33155.0], [3.3, 33155.0], [3.4, 33155.0], [3.5, 33155.0], [3.6, 33155.0], [3.7, 33155.0], [3.8, 33208.0], [3.9, 33208.0], [4.0, 33208.0], [4.1, 33208.0], [4.2, 33208.0], [4.3, 33208.0], [4.4, 33208.0], [4.5, 33208.0], [4.6, 33208.0], [4.7, 33208.0], [4.8, 33208.0], [4.9, 33208.0], [5.0, 33306.0], [5.1, 33306.0], [5.2, 33306.0], [5.3, 33306.0], [5.4, 33306.0], [5.5, 33306.0], [5.6, 33306.0], [5.7, 33306.0], [5.8, 33306.0], [5.9, 33306.0], [6.0, 33306.0], [6.1, 33306.0], [6.2, 33306.0], [6.3, 33884.0], [6.4, 33884.0], [6.5, 33884.0], [6.6, 33884.0], [6.7, 33884.0], [6.8, 33884.0], [6.9, 33884.0], [7.0, 33884.0], [7.1, 33884.0], [7.2, 33884.0], [7.3, 33884.0], [7.4, 33884.0], [7.5, 33909.0], [7.6, 33909.0], [7.7, 33909.0], [7.8, 33909.0], [7.9, 33909.0], [8.0, 33909.0], [8.1, 33909.0], [8.2, 33909.0], [8.3, 33909.0], [8.4, 33909.0], [8.5, 33909.0], [8.6, 33909.0], [8.7, 33909.0], [8.8, 34118.0], [8.9, 34118.0], [9.0, 34118.0], [9.1, 34118.0], [9.2, 34118.0], [9.3, 34118.0], [9.4, 34118.0], [9.5, 34118.0], [9.6, 34118.0], [9.7, 34118.0], [9.8, 34118.0], [9.9, 34118.0], [10.0, 34538.0], [10.1, 34538.0], [10.2, 34538.0], [10.3, 34538.0], [10.4, 34538.0], [10.5, 34538.0], [10.6, 34538.0], [10.7, 34538.0], [10.8, 34538.0], [10.9, 34538.0], [11.0, 34538.0], [11.1, 34538.0], [11.2, 34538.0], [11.3, 35065.0], [11.4, 35065.0], [11.5, 35065.0], [11.6, 35065.0], [11.7, 35065.0], [11.8, 35065.0], [11.9, 35065.0], [12.0, 35065.0], [12.1, 35065.0], [12.2, 35065.0], [12.3, 35065.0], [12.4, 35065.0], [12.5, 36224.0], [12.6, 36224.0], [12.7, 36224.0], [12.8, 36224.0], [12.9, 36224.0], [13.0, 36224.0], [13.1, 36224.0], [13.2, 36224.0], [13.3, 36224.0], [13.4, 36224.0], [13.5, 36224.0], [13.6, 36224.0], [13.7, 36224.0], [13.8, 37571.0], [13.9, 37571.0], [14.0, 37571.0], [14.1, 37571.0], [14.2, 37571.0], [14.3, 37571.0], [14.4, 37571.0], [14.5, 37571.0], [14.6, 37571.0], [14.7, 37571.0], [14.8, 37571.0], [14.9, 37571.0], [15.0, 37618.0], [15.1, 37618.0], [15.2, 37618.0], [15.3, 37618.0], [15.4, 37618.0], [15.5, 37618.0], [15.6, 37618.0], [15.7, 37618.0], [15.8, 37618.0], [15.9, 37618.0], [16.0, 37618.0], [16.1, 37618.0], [16.2, 37618.0], [16.3, 39501.0], [16.4, 39501.0], [16.5, 39501.0], [16.6, 39501.0], [16.7, 39501.0], [16.8, 39501.0], [16.9, 39501.0], [17.0, 39501.0], [17.1, 39501.0], [17.2, 39501.0], [17.3, 39501.0], [17.4, 39501.0], [17.5, 39531.0], [17.6, 39531.0], [17.7, 39531.0], [17.8, 39531.0], [17.9, 39531.0], [18.0, 39531.0], [18.1, 39531.0], [18.2, 39531.0], [18.3, 39531.0], [18.4, 39531.0], [18.5, 39531.0], [18.6, 39531.0], [18.7, 39531.0], [18.8, 39784.0], [18.9, 39784.0], [19.0, 39784.0], [19.1, 39784.0], [19.2, 39784.0], [19.3, 39784.0], [19.4, 39784.0], [19.5, 39784.0], [19.6, 39784.0], [19.7, 39784.0], [19.8, 39784.0], [19.9, 39784.0], [20.0, 39907.0], [20.1, 39907.0], [20.2, 39907.0], [20.3, 39907.0], [20.4, 39907.0], [20.5, 39907.0], [20.6, 39907.0], [20.7, 39907.0], [20.8, 39907.0], [20.9, 39907.0], [21.0, 39907.0], [21.1, 39907.0], [21.2, 39907.0], [21.3, 40193.0], [21.4, 40193.0], [21.5, 40193.0], [21.6, 40193.0], [21.7, 40193.0], [21.8, 40193.0], [21.9, 40193.0], [22.0, 40193.0], [22.1, 40193.0], [22.2, 40193.0], [22.3, 40193.0], [22.4, 40193.0], [22.5, 40403.0], [22.6, 40403.0], [22.7, 40403.0], [22.8, 40403.0], [22.9, 40403.0], [23.0, 40403.0], [23.1, 40403.0], [23.2, 40403.0], [23.3, 40403.0], [23.4, 40403.0], [23.5, 40403.0], [23.6, 40403.0], [23.7, 40403.0], [23.8, 40553.0], [23.9, 40553.0], [24.0, 40553.0], [24.1, 40553.0], [24.2, 40553.0], [24.3, 40553.0], [24.4, 40553.0], [24.5, 40553.0], [24.6, 40553.0], [24.7, 40553.0], [24.8, 40553.0], [24.9, 40553.0], [25.0, 40595.0], [25.1, 40595.0], [25.2, 40595.0], [25.3, 40595.0], [25.4, 40595.0], [25.5, 40595.0], [25.6, 40595.0], [25.7, 40595.0], [25.8, 40595.0], [25.9, 40595.0], [26.0, 40595.0], [26.1, 40595.0], [26.2, 40595.0], [26.3, 40860.0], [26.4, 40860.0], [26.5, 40860.0], [26.6, 40860.0], [26.7, 40860.0], [26.8, 40860.0], [26.9, 40860.0], [27.0, 40860.0], [27.1, 40860.0], [27.2, 40860.0], [27.3, 40860.0], [27.4, 40860.0], [27.5, 41186.0], [27.6, 41186.0], [27.7, 41186.0], [27.8, 41186.0], [27.9, 41186.0], [28.0, 41186.0], [28.1, 41186.0], [28.2, 41186.0], [28.3, 41186.0], [28.4, 41186.0], [28.5, 41186.0], [28.6, 41186.0], [28.7, 41186.0], [28.8, 41193.0], [28.9, 41193.0], [29.0, 41193.0], [29.1, 41193.0], [29.2, 41193.0], [29.3, 41193.0], [29.4, 41193.0], [29.5, 41193.0], [29.6, 41193.0], [29.7, 41193.0], [29.8, 41193.0], [29.9, 41193.0], [30.0, 41254.0], [30.1, 41254.0], [30.2, 41254.0], [30.3, 41254.0], [30.4, 41254.0], [30.5, 41254.0], [30.6, 41254.0], [30.7, 41254.0], [30.8, 41254.0], [30.9, 41254.0], [31.0, 41254.0], [31.1, 41254.0], [31.2, 41254.0], [31.3, 41365.0], [31.4, 41365.0], [31.5, 41365.0], [31.6, 41365.0], [31.7, 41365.0], [31.8, 41365.0], [31.9, 41365.0], [32.0, 41365.0], [32.1, 41365.0], [32.2, 41365.0], [32.3, 41365.0], [32.4, 41365.0], [32.5, 41686.0], [32.6, 41686.0], [32.7, 41686.0], [32.8, 41686.0], [32.9, 41686.0], [33.0, 41686.0], [33.1, 41686.0], [33.2, 41686.0], [33.3, 41686.0], [33.4, 41686.0], [33.5, 41686.0], [33.6, 41686.0], [33.7, 41686.0], [33.8, 41697.0], [33.9, 41697.0], [34.0, 41697.0], [34.1, 41697.0], [34.2, 41697.0], [34.3, 41697.0], [34.4, 41697.0], [34.5, 41697.0], [34.6, 41697.0], [34.7, 41697.0], [34.8, 41697.0], [34.9, 41697.0], [35.0, 41721.0], [35.1, 41721.0], [35.2, 41721.0], [35.3, 41721.0], [35.4, 41721.0], [35.5, 41721.0], [35.6, 41721.0], [35.7, 41721.0], [35.8, 41721.0], [35.9, 41721.0], [36.0, 41721.0], [36.1, 41721.0], [36.2, 41721.0], [36.3, 41834.0], [36.4, 41834.0], [36.5, 41834.0], [36.6, 41834.0], [36.7, 41834.0], [36.8, 41834.0], [36.9, 41834.0], [37.0, 41834.0], [37.1, 41834.0], [37.2, 41834.0], [37.3, 41834.0], [37.4, 41834.0], [37.5, 41994.0], [37.6, 41994.0], [37.7, 41994.0], [37.8, 41994.0], [37.9, 41994.0], [38.0, 41994.0], [38.1, 41994.0], [38.2, 41994.0], [38.3, 41994.0], [38.4, 41994.0], [38.5, 41994.0], [38.6, 41994.0], [38.7, 41994.0], [38.8, 42123.0], [38.9, 42123.0], [39.0, 42123.0], [39.1, 42123.0], [39.2, 42123.0], [39.3, 42123.0], [39.4, 42123.0], [39.5, 42123.0], [39.6, 42123.0], [39.7, 42123.0], [39.8, 42123.0], [39.9, 42123.0], [40.0, 42167.0], [40.1, 42167.0], [40.2, 42167.0], [40.3, 42167.0], [40.4, 42167.0], [40.5, 42167.0], [40.6, 42167.0], [40.7, 42167.0], [40.8, 42167.0], [40.9, 42167.0], [41.0, 42167.0], [41.1, 42167.0], [41.2, 42167.0], [41.3, 42195.0], [41.4, 42195.0], [41.5, 42195.0], [41.6, 42195.0], [41.7, 42195.0], [41.8, 42195.0], [41.9, 42195.0], [42.0, 42195.0], [42.1, 42195.0], [42.2, 42195.0], [42.3, 42195.0], [42.4, 42195.0], [42.5, 42389.0], [42.6, 42389.0], [42.7, 42389.0], [42.8, 42389.0], [42.9, 42389.0], [43.0, 42389.0], [43.1, 42389.0], [43.2, 42389.0], [43.3, 42389.0], [43.4, 42389.0], [43.5, 42389.0], [43.6, 42389.0], [43.7, 42389.0], [43.8, 42613.0], [43.9, 42613.0], [44.0, 42613.0], [44.1, 42613.0], [44.2, 42613.0], [44.3, 42613.0], [44.4, 42613.0], [44.5, 42613.0], [44.6, 42613.0], [44.7, 42613.0], [44.8, 42613.0], [44.9, 42613.0], [45.0, 42614.0], [45.1, 42614.0], [45.2, 42614.0], [45.3, 42614.0], [45.4, 42614.0], [45.5, 42614.0], [45.6, 42614.0], [45.7, 42614.0], [45.8, 42614.0], [45.9, 42614.0], [46.0, 42614.0], [46.1, 42614.0], [46.2, 42614.0], [46.3, 42628.0], [46.4, 42628.0], [46.5, 42628.0], [46.6, 42628.0], [46.7, 42628.0], [46.8, 42628.0], [46.9, 42628.0], [47.0, 42628.0], [47.1, 42628.0], [47.2, 42628.0], [47.3, 42628.0], [47.4, 42628.0], [47.5, 42798.0], [47.6, 42798.0], [47.7, 42798.0], [47.8, 42798.0], [47.9, 42798.0], [48.0, 42798.0], [48.1, 42798.0], [48.2, 42798.0], [48.3, 42798.0], [48.4, 42798.0], [48.5, 42798.0], [48.6, 42798.0], [48.7, 42798.0], [48.8, 42867.0], [48.9, 42867.0], [49.0, 42867.0], [49.1, 42867.0], [49.2, 42867.0], [49.3, 42867.0], [49.4, 42867.0], [49.5, 42867.0], [49.6, 42867.0], [49.7, 42867.0], [49.8, 42867.0], [49.9, 42867.0], [50.0, 42930.0], [50.1, 42930.0], [50.2, 42930.0], [50.3, 42930.0], [50.4, 42930.0], [50.5, 42930.0], [50.6, 42930.0], [50.7, 42930.0], [50.8, 42930.0], [50.9, 42930.0], [51.0, 42930.0], [51.1, 42930.0], [51.2, 42930.0], [51.3, 43101.0], [51.4, 43101.0], [51.5, 43101.0], [51.6, 43101.0], [51.7, 43101.0], [51.8, 43101.0], [51.9, 43101.0], [52.0, 43101.0], [52.1, 43101.0], [52.2, 43101.0], [52.3, 43101.0], [52.4, 43101.0], [52.5, 43163.0], [52.6, 43163.0], [52.7, 43163.0], [52.8, 43163.0], [52.9, 43163.0], [53.0, 43163.0], [53.1, 43163.0], [53.2, 43163.0], [53.3, 43163.0], [53.4, 43163.0], [53.5, 43163.0], [53.6, 43163.0], [53.7, 43163.0], [53.8, 43216.0], [53.9, 43216.0], [54.0, 43216.0], [54.1, 43216.0], [54.2, 43216.0], [54.3, 43216.0], [54.4, 43216.0], [54.5, 43216.0], [54.6, 43216.0], [54.7, 43216.0], [54.8, 43216.0], [54.9, 43216.0], [55.0, 43249.0], [55.1, 43249.0], [55.2, 43249.0], [55.3, 43249.0], [55.4, 43249.0], [55.5, 43249.0], [55.6, 43249.0], [55.7, 43249.0], [55.8, 43249.0], [55.9, 43249.0], [56.0, 43249.0], [56.1, 43249.0], [56.2, 43249.0], [56.3, 43251.0], [56.4, 43251.0], [56.5, 43251.0], [56.6, 43251.0], [56.7, 43251.0], [56.8, 43251.0], [56.9, 43251.0], [57.0, 43251.0], [57.1, 43251.0], [57.2, 43251.0], [57.3, 43251.0], [57.4, 43251.0], [57.5, 43291.0], [57.6, 43291.0], [57.7, 43291.0], [57.8, 43291.0], [57.9, 43291.0], [58.0, 43291.0], [58.1, 43291.0], [58.2, 43291.0], [58.3, 43291.0], [58.4, 43291.0], [58.5, 43291.0], [58.6, 43291.0], [58.7, 43291.0], [58.8, 43614.0], [58.9, 43614.0], [59.0, 43614.0], [59.1, 43614.0], [59.2, 43614.0], [59.3, 43614.0], [59.4, 43614.0], [59.5, 43614.0], [59.6, 43614.0], [59.7, 43614.0], [59.8, 43614.0], [59.9, 43614.0], [60.0, 43803.0], [60.1, 43803.0], [60.2, 43803.0], [60.3, 43803.0], [60.4, 43803.0], [60.5, 43803.0], [60.6, 43803.0], [60.7, 43803.0], [60.8, 43803.0], [60.9, 43803.0], [61.0, 43803.0], [61.1, 43803.0], [61.2, 43803.0], [61.3, 43886.0], [61.4, 43886.0], [61.5, 43886.0], [61.6, 43886.0], [61.7, 43886.0], [61.8, 43886.0], [61.9, 43886.0], [62.0, 43886.0], [62.1, 43886.0], [62.2, 43886.0], [62.3, 43886.0], [62.4, 43886.0], [62.5, 43941.0], [62.6, 43941.0], [62.7, 43941.0], [62.8, 43941.0], [62.9, 43941.0], [63.0, 43941.0], [63.1, 43941.0], [63.2, 43941.0], [63.3, 43941.0], [63.4, 43941.0], [63.5, 43941.0], [63.6, 43941.0], [63.7, 43941.0], [63.8, 43997.0], [63.9, 43997.0], [64.0, 43997.0], [64.1, 43997.0], [64.2, 43997.0], [64.3, 43997.0], [64.4, 43997.0], [64.5, 43997.0], [64.6, 43997.0], [64.7, 43997.0], [64.8, 43997.0], [64.9, 43997.0], [65.0, 44049.0], [65.1, 44049.0], [65.2, 44049.0], [65.3, 44049.0], [65.4, 44049.0], [65.5, 44049.0], [65.6, 44049.0], [65.7, 44049.0], [65.8, 44049.0], [65.9, 44049.0], [66.0, 44049.0], [66.1, 44049.0], [66.2, 44049.0], [66.3, 44133.0], [66.4, 44133.0], [66.5, 44133.0], [66.6, 44133.0], [66.7, 44133.0], [66.8, 44133.0], [66.9, 44133.0], [67.0, 44133.0], [67.1, 44133.0], [67.2, 44133.0], [67.3, 44133.0], [67.4, 44133.0], [67.5, 44171.0], [67.6, 44171.0], [67.7, 44171.0], [67.8, 44171.0], [67.9, 44171.0], [68.0, 44171.0], [68.1, 44171.0], [68.2, 44171.0], [68.3, 44171.0], [68.4, 44171.0], [68.5, 44171.0], [68.6, 44171.0], [68.7, 44171.0], [68.8, 44244.0], [68.9, 44244.0], [69.0, 44244.0], [69.1, 44244.0], [69.2, 44244.0], [69.3, 44244.0], [69.4, 44244.0], [69.5, 44244.0], [69.6, 44244.0], [69.7, 44244.0], [69.8, 44244.0], [69.9, 44244.0], [70.0, 44312.0], [70.1, 44312.0], [70.2, 44312.0], [70.3, 44312.0], [70.4, 44312.0], [70.5, 44312.0], [70.6, 44312.0], [70.7, 44312.0], [70.8, 44312.0], [70.9, 44312.0], [71.0, 44312.0], [71.1, 44312.0], [71.2, 44312.0], [71.3, 44347.0], [71.4, 44347.0], [71.5, 44347.0], [71.6, 44347.0], [71.7, 44347.0], [71.8, 44347.0], [71.9, 44347.0], [72.0, 44347.0], [72.1, 44347.0], [72.2, 44347.0], [72.3, 44347.0], [72.4, 44347.0], [72.5, 44438.0], [72.6, 44438.0], [72.7, 44438.0], [72.8, 44438.0], [72.9, 44438.0], [73.0, 44438.0], [73.1, 44438.0], [73.2, 44438.0], [73.3, 44438.0], [73.4, 44438.0], [73.5, 44438.0], [73.6, 44438.0], [73.7, 44438.0], [73.8, 44563.0], [73.9, 44563.0], [74.0, 44563.0], [74.1, 44563.0], [74.2, 44563.0], [74.3, 44563.0], [74.4, 44563.0], [74.5, 44563.0], [74.6, 44563.0], [74.7, 44563.0], [74.8, 44563.0], [74.9, 44563.0], [75.0, 44647.0], [75.1, 44647.0], [75.2, 44647.0], [75.3, 44647.0], [75.4, 44647.0], [75.5, 44647.0], [75.6, 44647.0], [75.7, 44647.0], [75.8, 44647.0], [75.9, 44647.0], [76.0, 44647.0], [76.1, 44647.0], [76.2, 44647.0], [76.3, 44661.0], [76.4, 44661.0], [76.5, 44661.0], [76.6, 44661.0], [76.7, 44661.0], [76.8, 44661.0], [76.9, 44661.0], [77.0, 44661.0], [77.1, 44661.0], [77.2, 44661.0], [77.3, 44661.0], [77.4, 44661.0], [77.5, 44692.0], [77.6, 44692.0], [77.7, 44692.0], [77.8, 44692.0], [77.9, 44692.0], [78.0, 44692.0], [78.1, 44692.0], [78.2, 44692.0], [78.3, 44692.0], [78.4, 44692.0], [78.5, 44692.0], [78.6, 44692.0], [78.7, 44692.0], [78.8, 44771.0], [78.9, 44771.0], [79.0, 44771.0], [79.1, 44771.0], [79.2, 44771.0], [79.3, 44771.0], [79.4, 44771.0], [79.5, 44771.0], [79.6, 44771.0], [79.7, 44771.0], [79.8, 44771.0], [79.9, 44771.0], [80.0, 44850.0], [80.1, 44850.0], [80.2, 44850.0], [80.3, 44850.0], [80.4, 44850.0], [80.5, 44850.0], [80.6, 44850.0], [80.7, 44850.0], [80.8, 44850.0], [80.9, 44850.0], [81.0, 44850.0], [81.1, 44850.0], [81.2, 44850.0], [81.3, 44857.0], [81.4, 44857.0], [81.5, 44857.0], [81.6, 44857.0], [81.7, 44857.0], [81.8, 44857.0], [81.9, 44857.0], [82.0, 44857.0], [82.1, 44857.0], [82.2, 44857.0], [82.3, 44857.0], [82.4, 44857.0], [82.5, 44868.0], [82.6, 44868.0], [82.7, 44868.0], [82.8, 44868.0], [82.9, 44868.0], [83.0, 44868.0], [83.1, 44868.0], [83.2, 44868.0], [83.3, 44868.0], [83.4, 44868.0], [83.5, 44868.0], [83.6, 44868.0], [83.7, 44868.0], [83.8, 46378.0], [83.9, 46378.0], [84.0, 46378.0], [84.1, 46378.0], [84.2, 46378.0], [84.3, 46378.0], [84.4, 46378.0], [84.5, 46378.0], [84.6, 46378.0], [84.7, 46378.0], [84.8, 46378.0], [84.9, 46378.0], [85.0, 47021.0], [85.1, 47021.0], [85.2, 47021.0], [85.3, 47021.0], [85.4, 47021.0], [85.5, 47021.0], [85.6, 47021.0], [85.7, 47021.0], [85.8, 47021.0], [85.9, 47021.0], [86.0, 47021.0], [86.1, 47021.0], [86.2, 47021.0], [86.3, 47059.0], [86.4, 47059.0], [86.5, 47059.0], [86.6, 47059.0], [86.7, 47059.0], [86.8, 47059.0], [86.9, 47059.0], [87.0, 47059.0], [87.1, 47059.0], [87.2, 47059.0], [87.3, 47059.0], [87.4, 47059.0], [87.5, 48249.0], [87.6, 48249.0], [87.7, 48249.0], [87.8, 48249.0], [87.9, 48249.0], [88.0, 48249.0], [88.1, 48249.0], [88.2, 48249.0], [88.3, 48249.0], [88.4, 48249.0], [88.5, 48249.0], [88.6, 48249.0], [88.7, 48249.0], [88.8, 54590.0], [88.9, 54590.0], [89.0, 54590.0], [89.1, 54590.0], [89.2, 54590.0], [89.3, 54590.0], [89.4, 54590.0], [89.5, 54590.0], [89.6, 54590.0], [89.7, 54590.0], [89.8, 54590.0], [89.9, 54590.0], [90.0, 54614.0], [90.1, 54614.0], [90.2, 54614.0], [90.3, 54614.0], [90.4, 54614.0], [90.5, 54614.0], [90.6, 54614.0], [90.7, 54614.0], [90.8, 54614.0], [90.9, 54614.0], [91.0, 54614.0], [91.1, 54614.0], [91.2, 54614.0], [91.3, 56990.0], [91.4, 56990.0], [91.5, 56990.0], [91.6, 56990.0], [91.7, 56990.0], [91.8, 56990.0], [91.9, 56990.0], [92.0, 56990.0], [92.1, 56990.0], [92.2, 56990.0], [92.3, 56990.0], [92.4, 56990.0], [92.5, 57152.0], [92.6, 57152.0], [92.7, 57152.0], [92.8, 57152.0], [92.9, 57152.0], [93.0, 57152.0], [93.1, 57152.0], [93.2, 57152.0], [93.3, 57152.0], [93.4, 57152.0], [93.5, 57152.0], [93.6, 57152.0], [93.7, 57152.0], [93.8, 57210.0], [93.9, 57210.0], [94.0, 57210.0], [94.1, 57210.0], [94.2, 57210.0], [94.3, 57210.0], [94.4, 57210.0], [94.5, 57210.0], [94.6, 57210.0], [94.7, 57210.0], [94.8, 57210.0], [94.9, 57210.0], [95.0, 57219.0], [95.1, 57219.0], [95.2, 57219.0], [95.3, 57219.0], [95.4, 57219.0], [95.5, 57219.0], [95.6, 57219.0], [95.7, 57219.0], [95.8, 57219.0], [95.9, 57219.0], [96.0, 57219.0], [96.1, 57219.0], [96.2, 57219.0], [96.3, 57359.0], [96.4, 57359.0], [96.5, 57359.0], [96.6, 57359.0], [96.7, 57359.0], [96.8, 57359.0], [96.9, 57359.0], [97.0, 57359.0], [97.1, 57359.0], [97.2, 57359.0], [97.3, 57359.0], [97.4, 57359.0], [97.5, 57615.0], [97.6, 57615.0], [97.7, 57615.0], [97.8, 57615.0], [97.9, 57615.0], [98.0, 57615.0], [98.1, 57615.0], [98.2, 57615.0], [98.3, 57615.0], [98.4, 57615.0], [98.5, 57615.0], [98.6, 57615.0], [98.7, 57615.0], [98.8, 57633.0], [98.9, 57633.0], [99.0, 57633.0], [99.1, 57633.0], [99.2, 57633.0], [99.3, 57633.0], [99.4, 57633.0], [99.5, 57633.0], [99.6, 57633.0], [99.7, 57633.0], [99.8, 57633.0], [99.9, 57633.0]], "isOverall": false, "label": "Gerar Cotacao", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 40.0, "series": [{"data": [[0.0, 40.0], [300.0, 9.0], [600.0, 1.0], [400.0, 6.0], [100.0, 12.0], [200.0, 5.0], [500.0, 6.0], [1000.0, 1.0]], "isOverall": false, "label": "Token-0", "isController": false}, {"data": [[600.0, 7.0], [2700.0, 1.0], [2800.0, 1.0], [700.0, 1.0], [3000.0, 2.0], [3200.0, 3.0], [3300.0, 4.0], [200.0, 13.0], [800.0, 3.0], [3400.0, 3.0], [900.0, 5.0], [3800.0, 2.0], [1100.0, 1.0], [300.0, 4.0], [1200.0, 2.0], [5000.0, 2.0], [5400.0, 1.0], [5500.0, 1.0], [5600.0, 1.0], [1400.0, 1.0], [1500.0, 1.0], [400.0, 8.0], [500.0, 13.0]], "isOverall": false, "label": "Token-1", "isController": false}, {"data": [[600.0, 12.0], [700.0, 3.0], [800.0, 3.0], [900.0, 5.0], [1000.0, 4.0], [1100.0, 1.0], [1300.0, 2.0], [1500.0, 1.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 1.0], [3100.0, 1.0], [3300.0, 2.0], [200.0, 2.0], [3400.0, 1.0], [3500.0, 3.0], [3700.0, 3.0], [3600.0, 1.0], [3800.0, 3.0], [4200.0, 2.0], [300.0, 11.0], [5600.0, 1.0], [5500.0, 1.0], [5400.0, 1.0], [5800.0, 1.0], [5900.0, 1.0], [500.0, 12.0]], "isOverall": false, "label": "Token", "isController": false}, {"data": [[31000.0, 1.0], [32200.0, 1.0], [34500.0, 1.0], [34100.0, 1.0], [33900.0, 1.0], [33200.0, 1.0], [33800.0, 1.0], [33300.0, 1.0], [33100.0, 1.0], [36200.0, 1.0], [35000.0, 1.0], [37500.0, 1.0], [37600.0, 1.0], [39500.0, 2.0], [40500.0, 2.0], [40800.0, 1.0], [40400.0, 1.0], [39900.0, 1.0], [39700.0, 1.0], [40100.0, 1.0], [41300.0, 1.0], [41700.0, 1.0], [42100.0, 3.0], [42300.0, 1.0], [41600.0, 2.0], [42600.0, 3.0], [42700.0, 1.0], [42900.0, 1.0], [42800.0, 1.0], [41100.0, 2.0], [41200.0, 1.0], [41800.0, 1.0], [41900.0, 1.0], [43100.0, 2.0], [44800.0, 3.0], [44700.0, 1.0], [44100.0, 2.0], [44200.0, 1.0], [44000.0, 1.0], [43900.0, 2.0], [43800.0, 2.0], [44500.0, 1.0], [44300.0, 2.0], [43200.0, 4.0], [44600.0, 3.0], [44400.0, 1.0], [43600.0, 1.0], [47000.0, 2.0], [46300.0, 1.0], [48200.0, 1.0], [54600.0, 1.0], [54500.0, 1.0], [56900.0, 1.0], [57300.0, 1.0], [57200.0, 2.0], [57100.0, 1.0], [57600.0, 2.0]], "isOverall": false, "label": "Gerar Cotacao", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 57600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 83.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 127.0, "series": [{"data": [[0.0, 110.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 83.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 127.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 17.513157894736846, "minX": 1.62189654E12, "maxY": 20.0, "series": [{"data": [[1.6218966E12, 20.0], [1.62189672E12, 17.513157894736846], [1.62189654E12, 20.0], [1.62189666E12, 20.0]], "isOverall": false, "label": "Cotação Interna", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62189672E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 205.2125, "minX": 1.0, "maxY": 44865.57377049181, "series": [{"data": [[20.0, 205.2125]], "isOverall": false, "label": "Token-0", "isController": false}, {"data": [[20.0, 205.2125]], "isOverall": false, "label": "Token-0-Aggregated", "isController": false}, {"data": [[20.0, 1434.8124999999995]], "isOverall": false, "label": "Token-1", "isController": false}, {"data": [[20.0, 1434.8124999999995]], "isOverall": false, "label": "Token-1-Aggregated", "isController": false}, {"data": [[20.0, 1640.3999999999996]], "isOverall": false, "label": "Token", "isController": false}, {"data": [[20.0, 1640.3999999999996]], "isOverall": false, "label": "Token-Aggregated", "isController": false}, {"data": [[8.0, 34538.0], [2.0, 32262.0], [9.0, 35065.0], [10.0, 40193.0], [11.0, 39784.0], [3.0, 33306.0], [13.0, 40230.0], [14.0, 40403.0], [15.0, 42195.0], [16.0, 42123.0], [4.0, 33884.0], [1.0, 33155.0], [17.0, 41994.0], [18.0, 41697.0], [19.0, 42614.0], [20.0, 44865.57377049181], [5.0, 33208.0], [6.0, 33909.0], [7.0, 34118.0]], "isOverall": false, "label": "Gerar Cotacao", "isController": false}, {"data": [[17.6375, 43146.350000000006]], "isOverall": false, "label": "Gerar Cotacao-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 20.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 368.0, "minX": 1.62189654E12, "maxY": 1670.8333333333333, "series": [{"data": [[1.6218966E12, 1285.65], [1.62189672E12, 1202.85], [1.62189654E12, 981.3333333333334], [1.62189666E12, 1670.8333333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6218966E12, 548.6666666666666], [1.62189672E12, 564.7333333333333], [1.62189654E12, 368.0], [1.62189666E12, 713.2666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62189672E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 109.8, "minX": 1.62189654E12, "maxY": 48156.899999999994, "series": [{"data": [[1.6218966E12, 109.8], [1.62189672E12, 165.85714285714283], [1.62189654E12, 370.84999999999997], [1.62189666E12, 172.38461538461536]], "isOverall": false, "label": "Token-0", "isController": false}, {"data": [[1.6218966E12, 503.85], [1.62189672E12, 624.2857142857143], [1.62189654E12, 3823.5999999999995], [1.62189666E12, 749.8461538461538]], "isOverall": false, "label": "Token-1", "isController": false}, {"data": [[1.6218966E12, 613.8499999999998], [1.62189672E12, 790.2142857142857], [1.62189654E12, 4195.599999999999], [1.62189666E12, 922.307692307692]], "isOverall": false, "label": "Token", "isController": false}, {"data": [[1.6218966E12, 48156.899999999994], [1.62189672E12, 40451.00000000001], [1.62189666E12, 42816.76923076924]], "isOverall": false, "label": "Gerar Cotacao", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62189672E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 109.75, "minX": 1.62189654E12, "maxY": 48124.700000000004, "series": [{"data": [[1.6218966E12, 109.75], [1.62189672E12, 165.85714285714283], [1.62189654E12, 370.6], [1.62189666E12, 172.3461538461538]], "isOverall": false, "label": "Token-0", "isController": false}, {"data": [[1.6218966E12, 496.3], [1.62189672E12, 623.9285714285714], [1.62189654E12, 3819.5], [1.62189666E12, 731.9615384615383]], "isOverall": false, "label": "Token-1", "isController": false}, {"data": [[1.6218966E12, 109.75], [1.62189672E12, 165.85714285714283], [1.62189654E12, 370.6], [1.62189666E12, 172.3461538461538]], "isOverall": false, "label": "Token", "isController": false}, {"data": [[1.6218966E12, 48124.700000000004], [1.62189672E12, 40450.88235294117], [1.62189666E12, 42806.76923076922]], "isOverall": false, "label": "Gerar Cotacao", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62189672E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 19.450000000000003, "minX": 1.62189654E12, "maxY": 2551.3000000000006, "series": [{"data": [[1.6218966E12, 19.450000000000003], [1.62189672E12, 52.28571428571428], [1.62189654E12, 210.25], [1.62189666E12, 43.6923076923077]], "isOverall": false, "label": "Token-0", "isController": false}, {"data": [[1.6218966E12, 97.85], [1.62189672E12, 193.0], [1.62189654E12, 2551.3000000000006], [1.62189666E12, 252.0384615384616]], "isOverall": false, "label": "Token-1", "isController": false}, {"data": [[1.6218966E12, 19.450000000000003], [1.62189672E12, 52.28571428571428], [1.62189654E12, 210.25], [1.62189666E12, 43.6923076923077]], "isOverall": false, "label": "Token", "isController": false}, {"data": [[1.6218966E12, 436.5], [1.62189672E12, 221.6470588235294], [1.62189666E12, 76.92307692307693]], "isOverall": false, "label": "Gerar Cotacao", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62189672E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 30.0, "minX": 1.62189654E12, "maxY": 57633.0, "series": [{"data": [[1.6218966E12, 57633.0], [1.62189672E12, 46378.0], [1.62189654E12, 5908.0], [1.62189666E12, 44850.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6218966E12, 54611.6], [1.62189672E12, 44144.4], [1.62189654E12, 5561.7], [1.62189666E12, 43271.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6218966E12, 57633.0], [1.62189672E12, 46378.0], [1.62189654E12, 5908.0], [1.62189666E12, 44840.55]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6218966E12, 57218.55], [1.62189672E12, 44703.85], [1.62189654E12, 5687.299999999999], [1.62189666E12, 44338.25]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6218966E12, 49.0], [1.62189672E12, 30.0], [1.62189654E12, 184.0], [1.62189666E12, 48.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6218966E12, 561.5], [1.62189672E12, 1122.5], [1.62189654E12, 3342.0], [1.62189666E12, 650.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62189672E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 356.5, "minX": 1.0, "maxY": 42123.0, "series": [{"data": [[2.0, 1298.5], [8.0, 387.0], [10.0, 3532.0], [12.0, 511.5], [3.0, 1508.0], [15.0, 883.0], [4.0, 534.0], [1.0, 42123.0], [16.0, 432.0], [20.0, 356.5], [5.0, 638.0], [24.0, 636.5], [6.0, 32708.5], [7.0, 639.5], [30.0, 3484.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 30.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 177.0, "minX": 1.0, "maxY": 42123.0, "series": [{"data": [[2.0, 811.5], [8.0, 277.0], [10.0, 504.0], [12.0, 177.0], [3.0, 1074.0], [15.0, 461.0], [4.0, 241.0], [1.0, 42123.0], [16.0, 307.5], [20.0, 356.5], [5.0, 475.0], [24.0, 452.0], [6.0, 32708.5], [7.0, 522.5], [30.0, 1692.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 30.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.9333333333333333, "minX": 1.62189654E12, "maxY": 1.7333333333333334, "series": [{"data": [[1.6218966E12, 1.3333333333333333], [1.62189672E12, 0.9333333333333333], [1.62189654E12, 1.3333333333333333], [1.62189666E12, 1.7333333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62189672E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.23333333333333334, "minX": 1.62189654E12, "maxY": 1.3, "series": [{"data": [[1.6218966E12, 1.0], [1.62189672E12, 1.0333333333333334], [1.62189654E12, 0.6666666666666666], [1.62189666E12, 1.3]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6218966E12, 0.3333333333333333], [1.62189672E12, 0.23333333333333334], [1.62189654E12, 0.3333333333333333], [1.62189666E12, 0.43333333333333335]], "isOverall": false, "label": "301", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62189672E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.23333333333333334, "minX": 1.62189654E12, "maxY": 0.5666666666666667, "series": [{"data": [[1.6218966E12, 0.3333333333333333], [1.62189672E12, 0.23333333333333334], [1.62189654E12, 0.3333333333333333], [1.62189666E12, 0.43333333333333335]], "isOverall": false, "label": "Token-1-success", "isController": false}, {"data": [[1.6218966E12, 0.3333333333333333], [1.62189672E12, 0.23333333333333334], [1.62189654E12, 0.3333333333333333], [1.62189666E12, 0.43333333333333335]], "isOverall": false, "label": "Token-success", "isController": false}, {"data": [[1.6218966E12, 0.3333333333333333], [1.62189672E12, 0.23333333333333334], [1.62189654E12, 0.3333333333333333], [1.62189666E12, 0.43333333333333335]], "isOverall": false, "label": "Token-0-success", "isController": false}, {"data": [[1.6218966E12, 0.3333333333333333], [1.62189672E12, 0.5666666666666667], [1.62189666E12, 0.43333333333333335]], "isOverall": false, "label": "Gerar Cotacao-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62189672E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.62189654E12, "maxY": 1.7333333333333334, "series": [{"data": [[1.6218966E12, 1.3333333333333333], [1.62189672E12, 1.2666666666666666], [1.62189654E12, 1.0], [1.62189666E12, 1.7333333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62189672E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

